config.version = 19
### version history:
### 19: added youtube and webknox api key
### 18: added path to palladian POS model
### 17: added MavSync ttl mode
### 16: added blekko api key; removed obsolete options
### 15: added IndHistTTL update strategy
### 14: added IndHist update strategy
### 13: added AdaptiveTTL update strategies
### 12: added new mode for feed update strategy fix learned 
### 11: added DatasetEvaluator to config
### 10: added date extraction model to config
### 9: SchedulerTask fine tuning monitoring 
### 8: model path to English and German wiktionary DB
### 7: errorMailNotification in SchedulerTask
### 6: renamed configuration options for ProxySwitcher
### 5: added SendMail config
### 4: added thread pool size for DocumentRetriever, changed timeouts
### 3: added thread pool size for MetadataCreator
### 2: added timeouts for DocumentRetriever
### 1: initial version


######################## Model Paths ########################

models.palladian.date.published = palladian/date/pubClassifierFinal.model
models.palladian.date.modified =  palladian/date/modClassifierFinal.model

######################## API keys ########################
api.alchemy.key = b0ec6f30acfb22472f458eec1d1acf7f8e8da4f5
api.bing.key = D35DE1803D6F6F03AB5044430997A91924AD347A
api.google.key = ABQIAAAA7H0y5xnSFd668h5iwC-EqRQUCodsAOOOxFO2WQpCHSyvFhJDHxTj6f5-8hxq9u2Us0fLG1ZqBA6I-g
api.google.tranlsate.key = AIzaSyD-fJ-e3c70PMCdqB2q30BI9d_tFty25Lk
api.hakia.key = ROTDG-43NA1-HDBNF-M3V4O-NCDJ5
api.opencalais.key = mx2g74ej2qd4xpqdkrmnyny5
api.yahoo.key = Isx7uavV34E_iKMIuvEZB0pCUQPuBmxBttBxyXX3UtXNtl7uYkoDAKbFa6c-
api.yahoo_boss.key = R7ZPxa7V34FK8UPp4HFddNFJNdGcZoIHXsyvvlK1.5iPbiJ9cCS39LbWIfs-
api.bitly.login = qqilihq
api.bitly.key = R_2f0606b6760dd5e567afdf5e4ddbec2d
api.mixx.key = uoRkXpXlVZBNgQZfn7VR0w
api.reddit.username = qqilihq
api.reddit.password = amcocuymzu
api.readitlater.key = a62g2W68p36ema12fvTc410Td1A1Na62

# access to Collecta XMPP and REST API
# see: http://developer.collecta.com/APIindex/
api.collecta.key = aef13a5bc659dc610cf6ad300da7994e

# TODO I extracted API keys for majestic+compete from "Seo for Firefox" extension
# http://tools.seobook.com/firefox/seo-for-firefox.html
# we should get our own ones sooner or later
api.majestic.key = 2F85C7EF65

# Rankify API keys
# use backtweets.com to get number of tweets for a specific url
api.backtweets.key = 4f2b553e8de8a336a6a7
# BibSonomy is a bookmark service especially for publications/papers
api.bibsonomy.login = jumehl
api.bibsonomy.key = e954a3a053193c36283af8a760918302
# Google Buzz
api.google.buzz.key = AIzaSyBBuf8UDOkcq1Dg_NqfqF_Ggpc5F9hv0mM
# Facebook - Rankify App -> not used
api.facebook.key = 3e2b3878a8c85aa29b7aad1907f01499
api.facebook.secret = 6d6208bc31599b44cf856662b28341da
# Plurk.com - Rankify App
api.plurk.key = wNvoEnXhJei2IZat8f8YuAKHMDq79mTV
# Linked.in - Rankify App
api.linkedin.key = oSuIRh0O-pGFYcxW3pn43JXDygwfLL26-fhu3Y2hEffES9954u7pyuTJbLP8NDnQ
api.linkedin.secret = wvlBp_3_NOJdi76I4L82MZmArR7HX0O2HydYMHHYFnFOONSNjEELSnf55tE7EoxO
# ShareThis
api.sharethis.key = 94d2fab0-cbf6-4798-86ec-11a0fae8d48a
api.sharethis.secret = 5e06f20138b94a109ac1d079ef59b373

api.compete.key = 985582a7e0dc15d222f90423ed64f4ad

api.blekko.key = 0d4bb258

api.webknox.appId = c074e114
api.webknox.apiKey = 00143c39ce3838f9e690175c41c1fc15 

api.youtube.key =

######################## Feed ########################

# number of threads in the pool for the FeedReader
feedReader.threadPoolSize = 100

# number of threads in the pool for the MetadataCreator
metaInformationCreator.threadPoolSize = 500

# if false, do not check system limitations like number of available file descriptors 
feedReader.checkSystemLimitations=true

# if true, detected errors will be send by mail 
schedulerTask.errorMailNotification=false 

# The receipient of email notifications.
#schedulerTask.emailRecipient

# This many percent of the feeds processed per interval are allowed to be slow.
schedulerTask.maxSlowPercentage = 10

# This many percent of the feeds processed per interval are allowed to be unparsable.
schedulerTask.maxUnparsablePercentage = 2

# This many percent of the feeds processed per interval are allowed to be unreachable.
schedulerTask.maxUnreachablePercentage = 2

# Choose update strategy to evaluate. Supported values are: 
# Fix, FixLearned, AdaptiveTTL, LRU2, MAVSync, IndHist, IndHistTTL
datasetEvaluator.updateStrategy = Fix

# If datasetEvaluator.updateStrategy = Fix, choose a fix check interval in minutes >0, e.g. 60 for Fix1h
datasetEvaluator.fixCheckInterval = 60

# If datasetEvaluator.updateStrategy = FixLearned, choose mode 0 to average over first window or 1 to also use 
# timestamp of first poll 
datasetEvaluator.fixLearnedMode = 0

# If datasetEvaluator.updateStrategy = AdaptiveTTL or IndHistTTL, choose weight M > 0, common values are 0.1 or 0.2
datasetEvaluator.adaptiveTTLweightM = 0.1

# If datasetEvaluator.updateStrategy = IndHist, choose threshold theta as 0 < theta < 1, common values are between 0.15 and 0.5
datasetEvaluator.indHistTheta = 0.5

# If datasetEvaluator.updateStrategy = IndHistTTL, use threshold for internal strategy selection between IndHist and AdaptiveTTL  
datasetEvaluator.indHistTTLburst = 2.0

# If datasetEvaluator.updateStrategy = IndHistTTL, this is the time window analysed for internal strategy selection
datasetEvaluator.indHistTTLtimeWindowHours = 1

# If datasetEvaluator.updateStrategy = MAVSync, set to 
# 0 to ignore ttl attribute
# 1 to use ttl as a lower bound for the checkInterval calculated from the feed 
# 2 to foce ttl as checkInterval 
datasetEvaluator.rssTTLMode = 0

# Set min check interval in minutes > 0. Update strategies must not poll more often than this interval. 
datasetEvaluator.minCheckInterval = 1

# Set max check interval in minutes > 0. Update strategies must not poll less often than this interval. 
datasetEvaluator.maxCheckInterval = 1440

# Choose benchmark mode. Supported values are: 
# poll, time 
datasetEvaluator.benchmarkMode = time


######################## Threshold Dateextraction ########################
threshold.group1 = 0.15
threshold.group2 = 0.24
threshold.group3 = 0.18
threshold.group4 = 0.16
threshold.group5 = 0.14
threshold.group6 = 0.13
threshold.group7 = 0.17
threshold.group8 = 0.26
