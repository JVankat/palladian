#!/usr/local/bin/dot
#
# Class diagram 
# Generated by UMLGraph version 5.2 (http://www.umlgraph.org/)
#

digraph G {
	edge [fontname="arial",fontsize=10,labelfontname="arial",labelfontsize=10];
	node [fontname="arial",fontsize=10,shape=plaintext];
	nodesep=0.25;
	ranksep=0.5;
	// tud.iir.knowledge.Extractable
	c45261 [label=<<table title="tud.iir.knowledge.Extractable" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./Extractable.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"><font face="ariali"> Extractable </font></td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - serialVersionUID : long </td></tr>
<tr><td align="left" balign="left"> - id : int </td></tr>
<tr><td align="left" balign="left"> - name : String </td></tr>
<tr><td align="left" balign="left"> - trust : double </td></tr>
<tr><td align="left" balign="left"> - lastSearched : Date </td></tr>
<tr><td align="left" balign="left"> - extractedAt : Date </td></tr>
<tr><td align="left" balign="left"> # sources : Sources&lt;Source&gt; </td></tr>
<tr><td align="left" balign="left"> + UNKNOWN : int </td></tr>
<tr><td align="left" balign="left"> + TRAINING : int </td></tr>
<tr><td align="left" balign="left"> + TESTING : int </td></tr>
<tr><td align="left" balign="left"> - type : int </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + getID() : int </td></tr>
<tr><td align="left" balign="left"> + setID(id : int) </td></tr>
<tr><td align="left" balign="left"> + getName() : String </td></tr>
<tr><td align="left" balign="left"> + getSafeName() : String </td></tr>
<tr><td align="left" balign="left"> + setName(name : String) </td></tr>
<tr><td align="left" balign="left"> + getTrust() : double </td></tr>
<tr><td align="left" balign="left"> + setTrust(trust : double) </td></tr>
<tr><td align="left" balign="left"> + getLastSearched() : Date </td></tr>
<tr><td align="left" balign="left"> + setLastSearched(lastSearched : Date) </td></tr>
<tr><td align="left" balign="left"> + getExtractedAtAsUTCString() : String </td></tr>
<tr><td align="left" balign="left"> + getExtractedAt() : Date </td></tr>
<tr><td align="left" balign="left"> + setExtractedAt(extractedAt : Date) </td></tr>
<tr><td align="left" balign="left"> + getSources() : Sources&lt;Source&gt; </td></tr>
<tr><td align="left" balign="left"> + setSources(sources : Sources&lt;Source&gt;) </td></tr>
<tr><td align="left" balign="left"> + addSource(source : Source) </td></tr>
<tr><td align="left" balign="left"> + addSources(sources : Sources&lt;Source&gt;) </td></tr>
<tr><td align="left" balign="left"> + getType() : int </td></tr>
<tr><td align="left" balign="left"> + setType(type : int) </td></tr>
		</table></td></tr>
		</table>>, fontname="arial", fontcolor="black", fontsize=10.0];
	// tud.iir.knowledge.Attribute
	c45265 [label=<<table title="tud.iir.knowledge.Attribute" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" bgcolor="lemonChiffon" href="./Attribute.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> Attribute </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + VALUE_NUMERIC : int </td></tr>
<tr><td align="left" balign="left"> + VALUE_STRING : int </td></tr>
<tr><td align="left" balign="left"> + VALUE_DATE : int </td></tr>
<tr><td align="left" balign="left"> + VALUE_BOOLEAN : int </td></tr>
<tr><td align="left" balign="left"> + VALUE_IMAGE : int </td></tr>
<tr><td align="left" balign="left"> + VALUE_VIDEO : int </td></tr>
<tr><td align="left" balign="left"> + VALUE_AUDIO : int </td></tr>
<tr><td align="left" balign="left"> + VALUE_MIXED : int </td></tr>
<tr><td align="left" balign="left"> + VALUE_URI : int </td></tr>
<tr><td align="left" balign="left"> - synonyms : HashSet&lt;String&gt; </td></tr>
<tr><td align="left" balign="left"> - valueType : int </td></tr>
<tr><td align="left" balign="left"> - saveType : String </td></tr>
<tr><td align="left" balign="left"> - regExp : String </td></tr>
<tr><td align="left" balign="left"> - valueCount : int </td></tr>
<tr><td align="left" balign="left"> - concept : Concept </td></tr>
<tr><td align="left" balign="left"> - predefinedSources : HashSet&lt;Source&gt; </td></tr>
<tr><td align="left" balign="left"> - attributeRanges : HashSet&lt;AttributeRange&gt; </td></tr>
<tr><td align="left" balign="left"> - newSynonyms : HashSet&lt;String&gt; </td></tr>
<tr><td align="left" balign="left"> - attributeRangesToDelete : HashSet&lt;AttributeRange&gt; </td></tr>
<tr><td align="left" balign="left"> - newName : String </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - init(name : String, valueType : int, concept : Concept) </td></tr>
<tr><td align="left" balign="left"> + getValueTypeByName(name : String) : int </td></tr>
<tr><td align="left" balign="left"> + hasSynonym(name : String) : boolean </td></tr>
<tr><td align="left" balign="left"> + getSynonyms() : HashSet&lt;String&gt; </td></tr>
<tr><td align="left" balign="left"> + getSynonymsToString() : String </td></tr>
<tr><td align="left" balign="left"> + setSynonyms(synonyms : HashSet&lt;String&gt;) </td></tr>
<tr><td align="left" balign="left"> + addSynonym(synonym : String) </td></tr>
<tr><td align="left" balign="left"> + guessValueType(factString : String, mode : int) : int </td></tr>
<tr><td align="left" balign="left"> + getValueType() : int </td></tr>
<tr><td align="left" balign="left"> + getValueTypeName() : String </td></tr>
<tr><td align="left" balign="left"> + getValueTypeXSD() : Resource </td></tr>
<tr><td align="left" balign="left"> + setValueType(valueType : int) </td></tr>
<tr><td align="left" balign="left"> + getSaveType() : String </td></tr>
<tr><td align="left" balign="left"> + setSaveType(saveType : String) </td></tr>
<tr><td align="left" balign="left"> + getRegExp() : String </td></tr>
<tr><td align="left" balign="left"> + setRegExp(regExp : String) </td></tr>
<tr><td align="left" balign="left"> + getConcept() : Concept </td></tr>
<tr><td align="left" balign="left"> - setConcept(concept : Concept) </td></tr>
<tr><td align="left" balign="left"> + getPredefinedSources() : HashSet&lt;Source&gt; </td></tr>
<tr><td align="left" balign="left"> + setPredefinedSources(predefinedSources : HashSet&lt;Source&gt;) </td></tr>
<tr><td align="left" balign="left"> + addPredefinedSource(source : Source) </td></tr>
<tr><td align="left" balign="left"> + getValueCount() : int </td></tr>
<tr><td align="left" balign="left"> + setValueCount(valueCount : int) </td></tr>
<tr><td align="left" balign="left"> + isExtracted() : boolean </td></tr>
<tr><td align="left" balign="left"> + toString() : String </td></tr>
<tr><td align="left" balign="left"> + getNewName() : String </td></tr>
<tr><td align="left" balign="left"> + getSafeNewName() : String </td></tr>
<tr><td align="left" balign="left"> + setNewName(newName : String) </td></tr>
<tr><td align="left" balign="left"> + getRangeString() : String </td></tr>
<tr><td align="left" balign="left"> + getAttributeRanges() : HashSet&lt;AttributeRange&gt; </td></tr>
<tr><td align="left" balign="left"> + getAttributeRangesToDelete() : HashSet&lt;AttributeRange&gt; </td></tr>
<tr><td align="left" balign="left"> + addRangeNodeDummies(rangeConceptName : String, rangeType : String) </td></tr>
<tr><td align="left" balign="left"> + addRangeValue(rangeValueItem : AttributeRange) </td></tr>
<tr><td align="left" balign="left"> + getRange(conceptName : String) : AttributeRange </td></tr>
<tr><td align="left" balign="left"> + removeRange(range : AttributeRange) </td></tr>
<tr><td align="left" balign="left"> + addRangeValue(rangeValueString : String, rangeConceptName : String) : boolean </td></tr>
<tr><td align="left" balign="left"> + removeRangeValue(rangeValue : String, rangeConceptName : String) </td></tr>
		</table></td></tr>
		</table>>, fontname="arial", fontcolor="black", fontsize=10.0];
	//tud.iir.knowledge.Attribute extends tud.iir.knowledge.Extractable
	c45261:p -> c45265:p [dir=back,arrowtail=empty];
}

