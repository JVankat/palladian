#!/usr/local/bin/dot
#
# Class diagram 
# Generated by UMLGraph version 5.2 (http://www.umlgraph.org/)
#

digraph G {
	edge [fontname="arial",fontsize=10,labelfontname="arial",labelfontsize=10];
	node [fontname="arial",fontsize=10,shape=plaintext];
	nodesep=0.25;
	ranksep=0.5;
	// tud.iir.classification.WordCorrelationMatrix
	c0 [label=<<table title="tud.iir.classification.WordCorrelationMatrix" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./WordCorrelationMatrix.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> WordCorrelationMatrix </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - serialVersionUID : long </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + updatePair(word1 : Term, word2 : Term) </td></tr>
<tr><td align="left" balign="left"> + makeRelativeScores(totalNumberOfDocuments : int) </td></tr>
<tr><td align="left" balign="left"> + getCorrelation(word1 : String, word2 : String) : WordCorrelation </td></tr>
<tr><td align="left" balign="left"> + toString() : String </td></tr>
		</table></td></tr>
		</table>>, fontname="arial", fontcolor="black", fontsize=10.0];
	// tud.iir.classification.WordCorrelation
	c1 [label=<<table title="tud.iir.classification.WordCorrelation" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./WordCorrelation.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> WordCorrelation </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - word1 : Term </td></tr>
<tr><td align="left" balign="left"> - word2 : Term </td></tr>
<tr><td align="left" balign="left"> - correlation : double </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + setWordPair(word1 : Term, word2 : Term) </td></tr>
<tr><td align="left" balign="left"> + hashCode() : int </td></tr>
<tr><td align="left" balign="left"> + equals(obj : Object) : boolean </td></tr>
<tr><td align="left" balign="left"> + getTerm1() : Term </td></tr>
<tr><td align="left" balign="left"> + getTerm2() : Term </td></tr>
<tr><td align="left" balign="left"> + setCorrelation(correlation : double) </td></tr>
<tr><td align="left" balign="left"> + getCorrelation() : double </td></tr>
<tr><td align="left" balign="left"> + increaseCorrelation(d : double) </td></tr>
		</table></td></tr>
		</table>>, fontname="arial", fontcolor="black", fontsize=10.0];
	// tud.iir.classification.Term
	c2 [label=<<table title="tud.iir.classification.Term" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./Term.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> Term </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - text : String </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + getText() : String </td></tr>
<tr><td align="left" balign="left"> + setText(text : String) </td></tr>
<tr><td align="left" balign="left"> + lowerCaseText() </td></tr>
<tr><td align="left" balign="left"> + equals(obj : Object) : boolean </td></tr>
<tr><td align="left" balign="left"> + toString() : String </td></tr>
<tr><td align="left" balign="left"> + main(a : String[]) </td></tr>
		</table></td></tr>
		</table>>, fontname="arial", fontcolor="black", fontsize=10.0];
	// tud.iir.classification.Helper
	c3 [label=<<table title="tud.iir.classification.Helper" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./Helper.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> Helper </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + importEntityAssessmentData() </td></tr>
<tr><td align="left" balign="left"> + main(args : String[]) </td></tr>
		</table></td></tr>
		</table>>, fontname="arial", fontcolor="black", fontsize=10.0];
	// tud.iir.classification.FeatureObject
	c4 [label=<<table title="tud.iir.classification.FeatureObject" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./FeatureObject.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> FeatureObject </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - features : Double[] </td></tr>
<tr><td align="left" balign="left"> - featureNames : String[] </td></tr>
<tr><td align="left" balign="left"> - classAssociation : int </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + getFeatures() : Double[] </td></tr>
<tr><td align="left" balign="left"> + setFeatures(features : Double[]) </td></tr>
<tr><td align="left" balign="left"> + getFeatureNames() : String[] </td></tr>
<tr><td align="left" balign="left"> + setFeatureNames(featureNames : String[]) </td></tr>
<tr><td align="left" balign="left"> + getClassAssociation() : int </td></tr>
<tr><td align="left" balign="left"> + getClassAssociationAsString() : String </td></tr>
<tr><td align="left" balign="left"> + setClassAssociation(classAssociation : int) </td></tr>
<tr><td align="left" balign="left"> + toString() : String </td></tr>
		</table></td></tr>
		</table>>, fontname="arial", fontcolor="black", fontsize=10.0];
	// tud.iir.classification.FeatureEvaluator
	c5 [label=<<table title="tud.iir.classification.FeatureEvaluator" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./FeatureEvaluator.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> FeatureEvaluator </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - features : String[] </td></tr>
<tr><td align="left" balign="left"> - featureQueries : PreparedStatement[] </td></tr>
<tr><td align="left" balign="left"> - classificationQueriesConcept : PreparedStatement[] </td></tr>
<tr><td align="left" balign="left"> - classificationQueriesEntity : PreparedStatement[] </td></tr>
<tr><td align="left" balign="left"> - concepts : HashSet&lt;Concept&gt; </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - createQueries() </td></tr>
<tr><td align="left" balign="left"> - testFeatures(classifier : EntityClassifier, conceptID : int) : ArrayList&lt;Double&gt; </td></tr>
<tr><td align="left" balign="left"> - evaluateClassifier(type : int) : ArrayList&lt;ArrayList&lt;Double&gt;&gt; </td></tr>
<tr><td align="left" balign="left"> - getFeatureCombination(type : int, conceptID : int) : Classifier </td></tr>
<tr><td align="left" balign="left"> - evaluateClassifierForAllConcepts(type : int, cfc : HashMap&lt;Integer, Classifier&gt;) : HashMap&lt;Integer, Classifier&gt; </td></tr>
<tr><td align="left" balign="left"> - evaluateClassifier(type : int, concept : Concept, cfc : HashMap&lt;Integer, Classifier&gt;) : HashMap&lt;Integer, Classifier&gt; </td></tr>
<tr><td align="left" balign="left"> + getClassifierFeatureCombination(concept : Concept) : HashMap&lt;Integer, Classifier&gt; </td></tr>
<tr><td align="left" balign="left"> + getClassifierFeatureCombination() : HashMap&lt;Integer, Classifier&gt; </td></tr>
<tr><td align="left" balign="left"> - completeFeatureEvaluation() </td></tr>
<tr><td align="left" balign="left"> + main(args : String[]) </td></tr>
		</table></td></tr>
		</table>>, fontname="arial", fontcolor="black", fontsize=10.0];
	// tud.iir.classification.Dictionary
	c6 [label=<<table title="tud.iir.classification.Dictionary" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./Dictionary.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> Dictionary </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - serialVersionUID : long </td></tr>
<tr><td align="left" balign="left"> - numberOfDocuments : int </td></tr>
<tr><td align="left" balign="left"> - name : String </td></tr>
<tr><td align="left" balign="left"> - categories : Categories </td></tr>
<tr><td align="left" balign="left"> - wcm : WordCorrelationMatrix </td></tr>
<tr><td align="left" balign="left"> + hierarchyRootNode : TreeNode </td></tr>
<tr><td align="left" balign="left"> - dictionaryIndex : DictionaryIndex </td></tr>
<tr><td align="left" balign="left"> + DB_INDEX_FAST : int </td></tr>
<tr><td align="left" balign="left"> + DB_INDEX_NORMALIZED : int </td></tr>
<tr><td align="left" balign="left"> + LUCENE_INDEX : int </td></tr>
<tr><td align="left" balign="left"> - indexType : int </td></tr>
<tr><td align="left" balign="left"> - useIndex : boolean </td></tr>
<tr><td align="left" balign="left"> - readFromIndexForUpdate : boolean </td></tr>
<tr><td align="left" balign="left"> - classType : int </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + useIndex(classType : int) </td></tr>
<tr><td align="left" balign="left"> + closeIndexWriter() </td></tr>
<tr><td align="left" balign="left"> + emptyIndex() </td></tr>
<tr><td align="left" balign="left"> + useMemory() </td></tr>
<tr><td align="left" balign="left"> + setMainCategories(categories : Categories) </td></tr>
<tr><td align="left" balign="left"> + updateWord(word : Term, category : Category, value : double) : CategoryEntries </td></tr>
<tr><td align="left" balign="left"> + updateWord(word : Term, categoryName : String, value : double) : CategoryEntries </td></tr>
<tr><td align="left" balign="left"> + getMostLikelyCategoryEntry(word : String, minimumScore : double) : CategoryEntry </td></tr>
<tr><td align="left" balign="left"> + getMostLikelyCategoryEntry(words : String[], minimumScore : double) : CategoryEntry </td></tr>
<tr><td align="left" balign="left"> + getCategoryEntries(word : String, minimumScore : double) : CategoryEntries </td></tr>
<tr><td align="left" balign="left"> + getCategoryEntries(words : String[]) : CategoryEntries </td></tr>
<tr><td align="left" balign="left"> + getNumberOfDocuments() : int </td></tr>
<tr><td align="left" balign="left"> + setNumberOfDocuments(numberOfDocuments : int) </td></tr>
<tr><td align="left" balign="left"> + increaseNumberOfDocuments() </td></tr>
<tr><td align="left" balign="left"> + saveAsCSV() </td></tr>
<tr><td align="left" balign="left"> + calculateCategoryPriors() </td></tr>
<tr><td align="left" balign="left"> + index(deleteIndexFirst : boolean) </td></tr>
<tr><td align="left" balign="left"> + serialize(indexPath : String, indexFirst : boolean, deleteIndexFirst : boolean) </td></tr>
<tr><td align="left" balign="left"> + get(term : Term) : CategoryEntries </td></tr>
<tr><td align="left" balign="left"> + getName() : String </td></tr>
<tr><td align="left" balign="left"> + setName(name : String) </td></tr>
<tr><td align="left" balign="left"> + getCategories() : Categories </td></tr>
<tr><td align="left" balign="left"> + setCategories(categories : Categories) </td></tr>
<tr><td align="left" balign="left"> + isReadFromIndexForUpdate() : boolean </td></tr>
<tr><td align="left" balign="left"> + setReadFromIndexForUpdate(readFromIndexForUpdate : boolean) </td></tr>
<tr><td align="left" balign="left"> + toString() : String </td></tr>
<tr><td align="left" balign="left"> + setClassType(classType : int) </td></tr>
<tr><td align="left" balign="left"> + getClassType() : int </td></tr>
<tr><td align="left" balign="left"> + setIndexType(indexType : int) </td></tr>
<tr><td align="left" balign="left"> + getIndexType() : int </td></tr>
<tr><td align="left" balign="left"> + setWcm(wcm : WordCorrelationMatrix) </td></tr>
<tr><td align="left" balign="left"> + getWcm() : WordCorrelationMatrix </td></tr>
		</table></td></tr>
		</table>>, fontname="arial", fontcolor="black", fontsize=10.0];
	// tud.iir.classification.Classifier
	c7 [label=<<table title="tud.iir.classification.Classifier" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./Classifier.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> Classifier </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - logger : Logger </td></tr>
<tr><td align="left" balign="left"> - fvWekaAttributes : FastVector </td></tr>
<tr><td align="left" balign="left"> - psFeatureStatement : PreparedStatement </td></tr>
<tr><td align="left" balign="left"> - psClassificationStatementConcept : PreparedStatement </td></tr>
<tr><td align="left" balign="left"> - psClassificationStatementEntity : PreparedStatement </td></tr>
<tr><td align="left" balign="left"> - trainingSet : Instances </td></tr>
<tr><td align="left" balign="left"> - testingSet : Instances </td></tr>
<tr><td align="left" balign="left"> - evaluation : Evaluation </td></tr>
<tr><td align="left" balign="left"> - discrete : boolean </td></tr>
<tr><td align="left" balign="left"> - nominalClass : boolean </td></tr>
<tr><td align="left" balign="left"> # trainingObjects : ArrayList&lt;FeatureObject&gt; </td></tr>
<tr><td align="left" balign="left"> # testingObjects : ArrayList&lt;FeatureObject&gt; </td></tr>
<tr><td align="left" balign="left"> + BAYES_NET : int </td></tr>
<tr><td align="left" balign="left"> + LINEAR_REGRESSION : int </td></tr>
<tr><td align="left" balign="left"> + SVM : int </td></tr>
<tr><td align="left" balign="left"> + NEURAL_NETWORK : int </td></tr>
<tr><td align="left" balign="left"> + SVM2 : int </td></tr>
<tr><td align="left" balign="left"> - chosenClassifier : int </td></tr>
<tr><td align="left" balign="left"> - classifier : Classifier </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> # createWekaAttributes(featureCount : int, attributeNames : String[]) </td></tr>
<tr><td align="left" balign="left"> + trainClassifier(filePath : String) </td></tr>
<tr><td align="left" balign="left"> # trainClassifier() : boolean </td></tr>
<tr><td align="left" balign="left"> + testClassifier(conceptID : int) </td></tr>
<tr><td align="left" balign="left"> - testClassifier() </td></tr>
<tr><td align="left" balign="left"> # discretize(features : Double[]) : Double[] </td></tr>
<tr><td align="left" balign="left"> # createInstance(features : Double[], trainingSet : Instances) : Instance </td></tr>
<tr><td align="left" balign="left"> # createInstance(fvWekaAttributes : FastVector, features : Double[], trainingSet : Instances) : Instance </td></tr>
<tr><td align="left" balign="left"> + readFeatureObjects(conceptID : int, featureQuery : PreparedStatement) : ArrayList&lt;FeatureObject&gt; </td></tr>
<tr><td align="left" balign="left"> + readFeatureObjects(filePath : String) : ArrayList&lt;FeatureObject&gt; </td></tr>
<tr><td align="left" balign="left"> + getFvWekaAttributes() : FastVector </td></tr>
<tr><td align="left" balign="left"> + setFvWekaAttributes(fvWekaAttributes : FastVector) </td></tr>
<tr><td align="left" balign="left"> + getPsFeatureStatement() : PreparedStatement </td></tr>
<tr><td align="left" balign="left"> + setPsFeatureStatement(psFeatureStatement : PreparedStatement) </td></tr>
<tr><td align="left" balign="left"> + getPsClassificationStatementConcept() : PreparedStatement </td></tr>
<tr><td align="left" balign="left"> + setPsClassificationStatementConcept(psClassificationStatement : PreparedStatement) </td></tr>
<tr><td align="left" balign="left"> + getPsClassificationStatementEntity() : PreparedStatement </td></tr>
<tr><td align="left" balign="left"> + setPsClassificationStatementEntity(psClassificationStatementEntity : PreparedStatement) </td></tr>
<tr><td align="left" balign="left"> + getTrainingSet() : Instances </td></tr>
<tr><td align="left" balign="left"> + setTrainingSet(trainingSet : Instances) </td></tr>
<tr><td align="left" balign="left"> + isDiscrete() : boolean </td></tr>
<tr><td align="left" balign="left"> + setDiscrete(discrete : boolean) </td></tr>
<tr><td align="left" balign="left"> + getTrainingObjects() : ArrayList&lt;FeatureObject&gt; </td></tr>
<tr><td align="left" balign="left"> + setTrainingObjects(trainingObjects : ArrayList&lt;FeatureObject&gt;) </td></tr>
<tr><td align="left" balign="left"> + getChosenClassifier() : int </td></tr>
<tr><td align="left" balign="left"> + getChosenClassifierName() : String </td></tr>
<tr><td align="left" balign="left"> + setChosenClassifier(chosenClassifier : int) </td></tr>
<tr><td align="left" balign="left"> + isNominalClass() : boolean </td></tr>
<tr><td align="left" balign="left"> + setNominalClass(nominalClass : boolean) </td></tr>
<tr><td align="left" balign="left"> + getClassifier() : Classifier </td></tr>
<tr><td align="left" balign="left"> + setClassifier(classifier : Classifier) </td></tr>
<tr><td align="left" balign="left"> + getEvaluation() : Evaluation </td></tr>
<tr><td align="left" balign="left"> + setEvaluation(evaluation : Evaluation) </td></tr>
<tr><td align="left" balign="left"> + getRMSE() : double </td></tr>
<tr><td align="left" balign="left"> + getFeatureCombination() : String </td></tr>
<tr><td align="left" balign="left"> + classifyBinary(fo : FeatureObject, output : boolean) : boolean </td></tr>
<tr><td align="left" balign="left"> + classifySoft(fo : FeatureObject) : double[] </td></tr>
<tr><td align="left" balign="left"> + main(args : String[]) </td></tr>
		</table></td></tr>
		</table>>, fontname="arial", fontcolor="black", fontsize=10.0];
	// tud.iir.classification.CategoryEntry
	c8 [label=<<table title="tud.iir.classification.CategoryEntry" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./CategoryEntry.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> CategoryEntry </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - serialVersionUID : long </td></tr>
<tr><td align="left" balign="left"> - categoryEntries : CategoryEntries </td></tr>
<tr><td align="left" balign="left"> - category : Category </td></tr>
<tr><td align="left" balign="left"> - absoluteRelevance : double </td></tr>
<tr><td align="left" balign="left"> - relativeRelevance : double </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + getCategory() : Category </td></tr>
<tr><td align="left" balign="left"> + setCategory(category : Category) </td></tr>
<tr><td align="left" balign="left"> + getRelevance() : double </td></tr>
<tr><td align="left" balign="left"> # setRelativeRelevance(relevance : double) </td></tr>
<tr><td align="left" balign="left"> + getAbsoluteRelevance() : double </td></tr>
<tr><td align="left" balign="left"> + addAbsoluteRelevance(value : double) </td></tr>
<tr><td align="left" balign="left"> + toString() : String </td></tr>
		</table></td></tr>
		</table>>, fontname="arial", fontcolor="black", fontsize=10.0];
	// tud.iir.classification.CategoryEntries
	c9 [label=<<table title="tud.iir.classification.CategoryEntries" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./CategoryEntries.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> CategoryEntries </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - serialVersionUID : long </td></tr>
<tr><td align="left" balign="left"> - relevancesInPercent : boolean </td></tr>
<tr><td align="left" balign="left"> - relevancesUpToDate : boolean </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + relevancesUpToDate() : boolean </td></tr>
<tr><td align="left" balign="left"> + setRelevancesUpToDate(relevancesUpToDate : boolean) </td></tr>
<tr><td align="left" balign="left"> + getCategoryEntry(category : Category) : CategoryEntry </td></tr>
<tr><td align="left" balign="left"> + getCategoryEntry(categoryName : String) : CategoryEntry </td></tr>
<tr><td align="left" balign="left"> + setRelevancesInPercent(relevancesInPercent : boolean) </td></tr>
<tr><td align="left" balign="left"> + transformRelevancesInPercent(spread : boolean) </td></tr>
<tr><td align="left" balign="left"> + add(e : CategoryEntry) : boolean </td></tr>
<tr><td align="left" balign="left"> + calculateRelativeRelevances() </td></tr>
		</table></td></tr>
		</table>>, fontname="arial", fontcolor="black", fontsize=10.0];
	// tud.iir.classification.Category
	c10 [label=<<table title="tud.iir.classification.Category" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./Category.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> Category </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - serialVersionUID : long </td></tr>
<tr><td align="left" balign="left"> - name : String </td></tr>
<tr><td align="left" balign="left"> - frequency : int </td></tr>
<tr><td align="left" balign="left"> - prior : double </td></tr>
<tr><td align="left" balign="left"> - testSetWeight : double </td></tr>
<tr><td align="left" balign="left"> - mainCategory : boolean </td></tr>
<tr><td align="left" balign="left"> - classType : int </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + getName() : String </td></tr>
<tr><td align="left" balign="left"> + setName(name : String) </td></tr>
<tr><td align="left" balign="left"> + getFrequency() : int </td></tr>
<tr><td align="left" balign="left"> + increaseFrequency() </td></tr>
<tr><td align="left" balign="left"> + decreaseFrequency() </td></tr>
<tr><td align="left" balign="left"> + getPrior() : double </td></tr>
<tr><td align="left" balign="left"> - setPrior(prior : double) </td></tr>
<tr><td align="left" balign="left"> + setIndexedPrior(prior : double) </td></tr>
<tr><td align="left" balign="left"> + calculatePrior(totalDocuments : int) </td></tr>
<tr><td align="left" balign="left"> + isMainCategory() : boolean </td></tr>
<tr><td align="left" balign="left"> + setMainCategory(mainCategory : boolean) </td></tr>
<tr><td align="left" balign="left"> + getClassType() : int </td></tr>
<tr><td align="left" balign="left"> + setClassType(classType : int) </td></tr>
<tr><td align="left" balign="left"> + equals(obj : Object) : boolean </td></tr>
<tr><td align="left" balign="left"> + toString() : String </td></tr>
<tr><td align="left" balign="left"> + setTestSetWeight(testSetWeight : double) </td></tr>
<tr><td align="left" balign="left"> + getTestSetWeight() : double </td></tr>
		</table></td></tr>
		</table>>, fontname="arial", fontcolor="black", fontsize=10.0];
	// tud.iir.classification.Categories
	c11 [label=<<table title="tud.iir.classification.Categories" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./Categories.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> Categories </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - serialVersionUID : long </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + contains(obj : Object) : boolean </td></tr>
<tr><td align="left" balign="left"> + containsCategoryName(categoryName : String) : boolean </td></tr>
<tr><td align="left" balign="left"> + add(category : Category) : boolean </td></tr>
<tr><td align="left" balign="left"> + addAll(c : Collection&lt;?&gt;) : boolean </td></tr>
<tr><td align="left" balign="left"> + getCategoryByName(categoryName : String) : Category </td></tr>
<tr><td align="left" balign="left"> + calculatePriors() </td></tr>
		</table></td></tr>
		</table>>, fontname="arial", fontcolor="black", fontsize=10.0];
}

