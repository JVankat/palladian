#!/usr/local/bin/dot
#
# Class diagram 
# Generated by UMLGraph version 5.2 (http://www.umlgraph.org/)
#

digraph G {
	edge [fontname="arial",fontsize=10,labelfontname="arial",labelfontsize=10];
	node [fontname="arial",fontsize=10,shape=plaintext];
	nodesep=0.25;
	ranksep=0.5;
	// tud.iir.classification.entity.NBC
	c237 [label=<<table title="tud.iir.classification.entity.NBC" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./NBC.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> NBC </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - serialVersionUID : long </td></tr>
<tr><td align="left" balign="left"> - positivePrior : double </td></tr>
<tr><td align="left" balign="left"> - negativePrior : double </td></tr>
<tr><td align="left" balign="left"> - threshold : double </td></tr>
<tr><td align="left" balign="left"> - probabilities : HashMap&lt;Integer, Double&gt; </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + getThreshold() : double </td></tr>
<tr><td align="left" balign="left"> + setThreshold(threshold : double) </td></tr>
<tr><td align="left" balign="left"> + classifySoft(discriminatorPMIOutcomes : Map&lt;Integer, Boolean&gt;) : Double[] </td></tr>
<tr><td align="left" balign="left"> + classify(discriminatorPMIOutcomes : Map&lt;Integer, Boolean&gt;) : boolean </td></tr>
		</table></td></tr>
		</table>>, fontname="arial", fontcolor="black", fontsize=10.0];
	// tud.iir.classification.entity.Feature
	c238 [label=<<table title="tud.iir.classification.entity.Feature" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./Feature.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> Feature </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - discriminatorNumber : double </td></tr>
<tr><td align="left" balign="left"> - pp : double </td></tr>
<tr><td align="left" balign="left"> - pn : double </td></tr>
<tr><td align="left" balign="left"> - np : double </td></tr>
<tr><td align="left" balign="left"> - nn : double </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + getProbablities() : Double[] </td></tr>
<tr><td align="left" balign="left"> + getDiscriminatorNumber() : double </td></tr>
<tr><td align="left" balign="left"> + setDiscriminatorNumber(discriminatorNumber : double) </td></tr>
<tr><td align="left" balign="left"> + getPP() : double </td></tr>
<tr><td align="left" balign="left"> + setPP(pp : double) </td></tr>
<tr><td align="left" balign="left"> + getPN() : double </td></tr>
<tr><td align="left" balign="left"> + setPN(pn : double) </td></tr>
<tr><td align="left" balign="left"> + getNP() : double </td></tr>
<tr><td align="left" balign="left"> + setNP(np : double) </td></tr>
<tr><td align="left" balign="left"> + getNN() : double </td></tr>
<tr><td align="left" balign="left"> + setNN(nn : double) </td></tr>
		</table></td></tr>
		</table>>, fontname="arial", fontcolor="black", fontsize=10.0];
	// tud.iir.classification.entity.WordFeatureClassifier
	c239 [label=<<table title="tud.iir.classification.entity.WordFeatureClassifier" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./WordFeatureClassifier.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> WordFeatureClassifier </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - featureEvaluator : FeatureEvaluator </td></tr>
<tr><td align="left" balign="left"> - psGetFeatures : PreparedStatement </td></tr>
<tr><td align="left" balign="left"> - features : String[] </td></tr>
<tr><td align="left" balign="left"> - trainingEntities : HashSet&lt;Entity&gt; </td></tr>
<tr><td align="left" balign="left"> - testingEntities : HashSet&lt;Entity&gt; </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> # evaluate() </td></tr>
<tr><td align="left" balign="left"> + main(args : String[]) </td></tr>
		</table></td></tr>
		</table>>, fontname="arial", fontcolor="black", fontsize=10.0];
	// tud.iir.classification.entity.Urns
	c240 [label=<<table title="tud.iir.classification.entity.Urns" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./Urns.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> Urns </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - calculateProbability(e : int, c : int, p : double, k : int, n : int) : double </td></tr>
<tr><td align="left" balign="left"> + classify(entity : Entity) : boolean </td></tr>
<tr><td align="left" balign="left"> + main(args : String[]) </td></tr>
		</table></td></tr>
		</table>>, fontname="arial", fontcolor="black", fontsize=10.0];
	// tud.iir.classification.entity.RandomGraphWalk
	c241 [label=<<table title="tud.iir.classification.entity.RandomGraphWalk" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./RandomGraphWalk.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> RandomGraphWalk </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - Mxy : Array2DRowRealMatrix </td></tr>
<tr><td align="left" balign="left"> - vt : ArrayRealVector </td></tr>
<tr><td align="left" balign="left"> - v0 : ArrayRealVector </td></tr>
<tr><td align="left" balign="left"> - testingEntities : HashMap&lt;Integer, Boolean&gt; </td></tr>
<tr><td align="left" balign="left"> - trainingEntities : HashMap&lt;Integer, Boolean&gt; </td></tr>
<tr><td align="left" balign="left"> - trainingEntitiesSeeds : ArrayList&lt;Entity&gt; </td></tr>
<tr><td align="left" balign="left"> ~ entityMap : HashMap&lt;String, ArrayList&lt;Entity&gt;&gt; </td></tr>
<tr><td align="left" balign="left"> ~ entityMatrixMappingInverse : HashMap&lt;Integer, Entity&gt; </td></tr>
<tr><td align="left" balign="left"> ~ idMap : HashMap&lt;String, HashMap&lt;String, HashSet&lt;Integer&gt;&gt;&gt; </td></tr>
<tr><td align="left" balign="left"> - m : double </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - initSeedProbabilities(entities : ArrayList&lt;Entity&gt;, trainingPercentage : double, seedPercentage : double) </td></tr>
<tr><td align="left" balign="left"> - buildAdjacencyMatrix(concept : Concept, trainingPercentage : double, seedPercentage : double) </td></tr>
<tr><td align="left" balign="left"> - buildProbabilityVector(timeSteps : int) </td></tr>
<tr><td align="left" balign="left"> + evaluate() </td></tr>
<tr><td align="left" balign="left"> + matrixTest() </td></tr>
<tr><td align="left" balign="left"> + classify(entity : Entity) : boolean </td></tr>
<tr><td align="left" balign="left"> + main(args : String[]) </td></tr>
		</table></td></tr>
		</table>>, fontname="arial", fontcolor="black", fontsize=10.0];
	// tud.iir.classification.entity.PMI
	c242 [label=<<table title="tud.iir.classification.entity.PMI" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./PMI.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> PMI </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - benchmark : boolean </td></tr>
<tr><td align="left" balign="left"> - benchmarkPMIs : HashMap&lt;String, Double&gt; </td></tr>
<tr><td align="left" balign="left"> - discriminators : String[] </td></tr>
<tr><td align="left" balign="left"> - extractions : HashMap&lt;Concept, HashSet&lt;Entity&gt;&gt; </td></tr>
<tr><td align="left" balign="left"> - classifiers : HashMap&lt;String, NBC&gt; </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + addConcept(c : Concept) </td></tr>
<tr><td align="left" balign="left"> - extract() </td></tr>
<tr><td align="left" balign="left"> - trainClassifiers(positiveEntities : Set&lt;Entity&gt;, negativeEntities : Set&lt;Entity&gt;, positiveEntitiesTuning : Set&lt;Entity&gt;, negativeEntitiesTuning : Set&lt;Entity&gt;, priorPositive : double, priorNegative : double) </td></tr>
<tr><td align="left" balign="left"> + classifySoft(entity : Entity) : Double[] </td></tr>
<tr><td align="left" balign="left"> + classify(entity : Entity) : boolean </td></tr>
<tr><td align="left" balign="left"> - findThreshold(positiveEntities : Set&lt;Entity&gt;, negativeEntities : Set&lt;Entity&gt;, concept : Concept) : double </td></tr>
<tr><td align="left" balign="left"> - calculatePMIForAllDiscriminators(entity : Entity) : double </td></tr>
<tr><td align="left" balign="left"> - calculatePMI(entity : Entity, discriminator : String) : double </td></tr>
<tr><td align="left" balign="left"> - calculatePMI(entity : Entity, discriminator : String, benchmark : boolean) : double </td></tr>
<tr><td align="left" balign="left"> - getDiscriminatorID(discriminator : String) : int </td></tr>
<tr><td align="left" balign="left"> + evaluate() </td></tr>
<tr><td align="left" balign="left"> + main(args : String[]) </td></tr>
		</table></td></tr>
		</table>>, fontname="arial", fontcolor="black", fontsize=10.0];
	// tud.iir.classification.entity.NoisyOr
	c243 [label=<<table title="tud.iir.classification.entity.NoisyOr" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./NoisyOr.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> NoisyOr </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - calculateProbability(p : double, k : int) : double </td></tr>
<tr><td align="left" balign="left"> + classify(entity : Entity) : boolean </td></tr>
<tr><td align="left" balign="left"> + main(args : String[]) </td></tr>
		</table></td></tr>
		</table>>, fontname="arial", fontcolor="black", fontsize=10.0];
	// tud.iir.classification.entity.GradualEntityTrustVoting
	c244 [label=<<table title="tud.iir.classification.entity.GradualEntityTrustVoting" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./GradualEntityTrustVoting.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> GradualEntityTrustVoting </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + runVoting() </td></tr>
<tr><td align="left" balign="left"> - gradualEntityTrustVotingPage() : int </td></tr>
<tr><td align="left" balign="left"> - gradualEntityTrustVotingEntity() : int </td></tr>
<tr><td align="left" balign="left"> + main(args : String[]) </td></tr>
		</table></td></tr>
		</table>>, fontname="arial", fontcolor="black", fontsize=10.0];
	// tud.iir.classification.entity.FeatureEntityTrustVoting
	c245 [label=<<table title="tud.iir.classification.entity.FeatureEntityTrustVoting" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./FeatureEntityTrustVoting.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> FeatureEntityTrustVoting </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + runVoting() </td></tr>
<tr><td align="left" balign="left"> - assignSourceTrust(method : String) </td></tr>
<tr><td align="left" balign="left"> - assignEntityTrust() </td></tr>
<tr><td align="left" balign="left"> + main(args : String[]) </td></tr>
		</table></td></tr>
		</table>>, fontname="arial", fontcolor="black", fontsize=10.0];
	// tud.iir.classification.entity.EvaluationHelper
	c246 [label=<<table title="tud.iir.classification.entity.EvaluationHelper" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./EvaluationHelper.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> EvaluationHelper </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + extract() </td></tr>
<tr><td align="left" balign="left"> + retreiveHitCounts() </td></tr>
<tr><td align="left" balign="left"> + main(args : String[]) </td></tr>
		</table></td></tr>
		</table>>, fontname="arial", fontcolor="black", fontsize=10.0];
	// tud.iir.classification.entity.EntityTrustVotingInterface
	c247 [label=<<table title="tud.iir.classification.entity.EntityTrustVotingInterface" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./EntityTrustVotingInterface.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> &#171;interface&#187; </td></tr>
<tr><td align="center" balign="center"> EntityTrustVotingInterface </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + runVoting() </td></tr>
		</table></td></tr>
		</table>>, fontname="arial", fontcolor="black", fontsize=10.0];
	// tud.iir.classification.entity.EntityTrustVoting
	c248 [label=<<table title="tud.iir.classification.entity.EntityTrustVoting" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./EntityTrustVoting.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> EntityTrustVoting </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> # dbm : DatabaseManager </td></tr>
<tr><td align="left" balign="left"> - psGetEntitiesByTrust : PreparedStatement </td></tr>
<tr><td align="left" balign="left"> # logger : Logger </td></tr>
<tr><td align="left" balign="left"> - psSelectTrustThreshold : PreparedStatement </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + createEntityFile() </td></tr>
<tr><td align="left" balign="left"> + createEntityFile2() </td></tr>
<tr><td align="left" balign="left"> + createEntityTrustChart() </td></tr>
<tr><td align="left" balign="left"> + findEntityConnection(entityID1 : int, entityID2 : int, lastSourceID : int, usedSources : HashSet&lt;Integer&gt;, pathArray : ArrayList&lt;String&gt;) : boolean </td></tr>
<tr><td align="left" balign="left"> # findTrustThreshold(conceptID : int) : double </td></tr>
<tr><td align="left" balign="left"> + main(args : String[]) </td></tr>
		</table></td></tr>
		</table>>, fontname="arial", fontcolor="black", fontsize=10.0];
	// tud.iir.classification.entity.EntityClassifier
	c249 [label=<<table title="tud.iir.classification.entity.EntityClassifier" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./EntityClassifier.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> EntityClassifier </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + trainClassifier(conceptID : int, featureString : PreparedStatement) : boolean </td></tr>
<tr><td align="left" balign="left"> + trainClassifier(conceptID : int, featureString : PreparedStatement, classificationString : PreparedStatement) : boolean </td></tr>
		</table></td></tr>
		</table>>, fontname="arial", fontcolor="black", fontsize=10.0];
	// tud.iir.classification.entity.EntityAssessor
	c250 [label=<<table title="tud.iir.classification.entity.EntityAssessor" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./EntityAssessor.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"><font face="ariali"> EntityAssessor </font></td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> # logger : Logger </td></tr>
<tr><td align="left" balign="left"> # trainingPercentageStepSize : double </td></tr>
<tr><td align="left" balign="left"> # trustThresholdStepSize : double </td></tr>
<tr><td align="left" balign="left"> # dbm : DatabaseManager </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> # calculateMetrics(totalRealCorrect : int, totalAssigned : int, totalCorrect : int, testSetSize : int) : ArrayList&lt;Double&gt; </td></tr>
<tr><td align="left" balign="left"> + logMetrics(concepts : HashSet&lt;Concept&gt;, evaluationMetrics : HashMap&lt;String, ArrayList&lt;Double&gt;&gt;) : ArrayList&lt;Double&gt; </td></tr>
<tr><td align="left" balign="left"> # createFlashChartLog(graphData : TreeMap&lt;Double, ArrayList&lt;Double&gt;&gt;) </td></tr>
<tr><td align="left" balign="left"><font face="ariali" point-size="10.0"> # evaluate() </font></td></tr>
		</table></td></tr>
		</table>>, fontname="arial", fontcolor="black", fontsize=10.0];
	// tud.iir.classification.entity.ClassifierEntityTrustVoting
	c251 [label=<<table title="tud.iir.classification.entity.ClassifierEntityTrustVoting" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./ClassifierEntityTrustVoting.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> ClassifierEntityTrustVoting </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - psGetFeatures : PreparedStatement </td></tr>
<tr><td align="left" balign="left"> - psSetEntityClass : PreparedStatement </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + runVoting() </td></tr>
<tr><td align="left" balign="left"> + runVoting(classifierType : int) </td></tr>
<tr><td align="left" balign="left"> + main(args : String[]) </td></tr>
		</table></td></tr>
		</table>>, fontname="arial", fontcolor="black", fontsize=10.0];
	// tud.iir.classification.entity.BooleanEntityTrustVoting
	c252 [label=<<table title="tud.iir.classification.entity.BooleanEntityTrustVoting" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./BooleanEntityTrustVoting.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> BooleanEntityTrustVoting </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - psSelectTrustedEntitySources : PreparedStatement </td></tr>
<tr><td align="left" balign="left"> - psSelectTrustedEntities : PreparedStatement </td></tr>
<tr><td align="left" balign="left"> - psUpdateEntityTrustSources : PreparedStatement </td></tr>
<tr><td align="left" balign="left"> - psUpdateEntityTrustEntities : PreparedStatement </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + runVoting() </td></tr>
<tr><td align="left" balign="left"> - booleanEntityTrustVotingPage() : int </td></tr>
<tr><td align="left" balign="left"> - booleanEntityTrustVotingEntity() : int </td></tr>
		</table></td></tr>
		</table>>, fontname="arial", fontcolor="black", fontsize=10.0];
	// tud.iir.classification.entity.BCFC
	c253 [label=<<table title="tud.iir.classification.entity.BCFC" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./BCFC.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> BCFC </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> # evaluate() </td></tr>
		</table></td></tr>
		</table>>, fontname="arial", fontcolor="black", fontsize=10.0];
	//tud.iir.classification.entity.WordFeatureClassifier extends tud.iir.classification.entity.EntityAssessor
	c250:p -> c239:p [dir=back,arrowtail=empty];
	//tud.iir.classification.entity.RandomGraphWalk extends tud.iir.classification.entity.EntityAssessor
	c250:p -> c241:p [dir=back,arrowtail=empty];
	//tud.iir.classification.entity.PMI extends tud.iir.classification.entity.EntityAssessor
	c250:p -> c242:p [dir=back,arrowtail=empty];
	//tud.iir.classification.entity.GradualEntityTrustVoting extends tud.iir.classification.entity.EntityTrustVoting
	c248:p -> c244:p [dir=back,arrowtail=empty];
	//tud.iir.classification.entity.GradualEntityTrustVoting implements tud.iir.classification.entity.EntityTrustVotingInterface
	c247:p -> c244:p [dir=back,arrowtail=empty,style=dashed];
	//tud.iir.classification.entity.FeatureEntityTrustVoting extends tud.iir.classification.entity.EntityTrustVoting
	c248:p -> c245:p [dir=back,arrowtail=empty];
	//tud.iir.classification.entity.FeatureEntityTrustVoting implements tud.iir.classification.entity.EntityTrustVotingInterface
	c247:p -> c245:p [dir=back,arrowtail=empty,style=dashed];
	//tud.iir.classification.entity.ClassifierEntityTrustVoting extends tud.iir.classification.entity.EntityTrustVoting
	c248:p -> c251:p [dir=back,arrowtail=empty];
	//tud.iir.classification.entity.ClassifierEntityTrustVoting implements tud.iir.classification.entity.EntityTrustVotingInterface
	c247:p -> c251:p [dir=back,arrowtail=empty,style=dashed];
	//tud.iir.classification.entity.BooleanEntityTrustVoting extends tud.iir.classification.entity.EntityTrustVoting
	c248:p -> c252:p [dir=back,arrowtail=empty];
	//tud.iir.classification.entity.BooleanEntityTrustVoting implements tud.iir.classification.entity.EntityTrustVotingInterface
	c247:p -> c252:p [dir=back,arrowtail=empty,style=dashed];
	//tud.iir.classification.entity.BCFC extends tud.iir.classification.entity.EntityAssessor
	c250:p -> c253:p [dir=back,arrowtail=empty];
}

