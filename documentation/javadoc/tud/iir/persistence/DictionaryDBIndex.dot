#!/usr/local/bin/dot
#
# Class diagram 
# Generated by UMLGraph version 5.2 (http://www.umlgraph.org/)
#

digraph G {
	edge [fontname="arial",fontsize=10,labelfontname="arial",labelfontsize=10];
	node [fontname="arial",fontsize=10,shape=plaintext];
	nodesep=0.25;
	ranksep=0.5;
	// tud.iir.persistence.DictionaryIndex
	c50917 [label=<<table title="tud.iir.persistence.DictionaryIndex" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./DictionaryIndex.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"><font face="ariali"> DictionaryIndex </font></td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> # logger : Logger </td></tr>
<tr><td align="left" balign="left"> # categories : Categories </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"><font face="ariali" point-size="10.0"> + write(word : String, categoryEntries : CategoryEntries) </font></td></tr>
<tr><td align="left" balign="left"><font face="ariali" point-size="10.0"> + write(word : String, categoryEntry : CategoryEntry) </font></td></tr>
<tr><td align="left" balign="left"><font face="ariali" point-size="10.0"> + update(word : String, categoryEntries : CategoryEntries) </font></td></tr>
<tr><td align="left" balign="left"><font face="ariali" point-size="10.0"> + update(word : String, categoryEntry : CategoryEntry) </font></td></tr>
<tr><td align="left" balign="left"><font face="ariali" point-size="10.0"> + read(word : String) : CategoryEntries </font></td></tr>
<tr><td align="left" balign="left"><font face="ariali" point-size="10.0"> + empty() </font></td></tr>
<tr><td align="left" balign="left"><font face="ariali" point-size="10.0"> + close() </font></td></tr>
<tr><td align="left" balign="left"><font face="ariali" point-size="10.0"> + openWriter() </font></td></tr>
<tr><td align="left" balign="left"><font face="ariali" point-size="10.0"> + openReader() : boolean </font></td></tr>
<tr><td align="left" balign="left"> + getCategories() : Categories </td></tr>
<tr><td align="left" balign="left"> + setCategories(categories : Categories) </td></tr>
		</table></td></tr>
		</table>>, fontname="arial", fontcolor="black", fontsize=10.0];
	// tud.iir.persistence.DictionaryDBIndex
	c50919 [label=<<table title="tud.iir.persistence.DictionaryDBIndex" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" bgcolor="lemonChiffon" href="./DictionaryDBIndex.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> DictionaryDBIndex </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - connection : Connection </td></tr>
<tr><td align="left" balign="left"> - dbType : String </td></tr>
<tr><td align="left" balign="left"> - dbDriver : String </td></tr>
<tr><td align="left" balign="left"> - dbHost : String </td></tr>
<tr><td align="left" balign="left"> - dbPort : String </td></tr>
<tr><td align="left" balign="left"> - dbName : String </td></tr>
<tr><td align="left" balign="left"> - dbUsername : String </td></tr>
<tr><td align="left" balign="left"> - dbPassword : String </td></tr>
<tr><td align="left" balign="left"> - psRead : PreparedStatement </td></tr>
<tr><td align="left" balign="left"> - psLastInsertID : PreparedStatement </td></tr>
<tr><td align="left" balign="left"> - psGetWordID : PreparedStatement </td></tr>
<tr><td align="left" balign="left"> - psGetCategoryID : PreparedStatement </td></tr>
<tr><td align="left" balign="left"> - psInsertWord : PreparedStatement </td></tr>
<tr><td align="left" balign="left"> - psInsertCategory : PreparedStatement </td></tr>
<tr><td align="left" balign="left"> - psInsertTuple : PreparedStatement </td></tr>
<tr><td align="left" balign="left"> - psUpdateTuple : PreparedStatement </td></tr>
<tr><td align="left" balign="left"> - psGetWordCategoryTuple : PreparedStatement </td></tr>
<tr><td align="left" balign="left"> - psTruncateDictionary : PreparedStatement </td></tr>
<tr><td align="left" balign="left"> - psTruncateTuples : PreparedStatement </td></tr>
<tr><td align="left" balign="left"> - psTruncateCategories : PreparedStatement </td></tr>
<tr><td align="left" balign="left"> - psTruncateTuple2 : PreparedStatement </td></tr>
<tr><td align="left" balign="left"> - psReadTuple2 : PreparedStatement </td></tr>
<tr><td align="left" balign="left"> - psInsertTuple2 : PreparedStatement </td></tr>
<tr><td align="left" balign="left"> - psUpdateTuple2 : PreparedStatement </td></tr>
<tr><td align="left" balign="left"> - psGetWordCategoryTuple2 : PreparedStatement </td></tr>
<tr><td align="left" balign="left"> - fastMode : boolean </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - getConnection() : Connection </td></tr>
<tr><td align="left" balign="left"> - runUpdate(preparedStatement : PreparedStatement) : int </td></tr>
<tr><td align="left" balign="left"> - runQueryID(statement : PreparedStatement) : int </td></tr>
<tr><td align="left" balign="left"> - runQuery(statement : PreparedStatement) : ResultSet </td></tr>
<tr><td align="left" balign="left"> + empty() </td></tr>
<tr><td align="left" balign="left"> + read(word : String) : CategoryEntries </td></tr>
<tr><td align="left" balign="left"> + read1(word : String) : CategoryEntries </td></tr>
<tr><td align="left" balign="left"> + read3(word : String) : CategoryEntries </td></tr>
<tr><td align="left" balign="left"> + update(word : String, categoryEntries : CategoryEntries) </td></tr>
<tr><td align="left" balign="left"> + update(word : String, categoryEntry : CategoryEntry) </td></tr>
<tr><td align="left" balign="left"> - update1(word : String, categoryEntries : CategoryEntries) </td></tr>
<tr><td align="left" balign="left"> - update1(word : String, categoryEntry : CategoryEntry) </td></tr>
<tr><td align="left" balign="left"> - update3(word : String, categoryEntries : CategoryEntries) </td></tr>
<tr><td align="left" balign="left"> - update3(word : String, categoryEntry : CategoryEntry) </td></tr>
<tr><td align="left" balign="left"> + write(word : String, categoryEntries : CategoryEntries) </td></tr>
<tr><td align="left" balign="left"> + write(word : String, categoryEntry : CategoryEntry) </td></tr>
<tr><td align="left" balign="left"> - write1(word : String, categoryEntries : CategoryEntries) </td></tr>
<tr><td align="left" balign="left"> - write1(word : String, categoryEntry : CategoryEntry) </td></tr>
<tr><td align="left" balign="left"> + write3(word : String, categoryEntries : CategoryEntries) </td></tr>
<tr><td align="left" balign="left"> - write3(word : String, categoryEntry : CategoryEntry) </td></tr>
<tr><td align="left" balign="left"> + getDbType() : String </td></tr>
<tr><td align="left" balign="left"> + setDbType(dbType : String) </td></tr>
<tr><td align="left" balign="left"> + getDbDriver() : String </td></tr>
<tr><td align="left" balign="left"> + setDbDriver(dbDriver : String) </td></tr>
<tr><td align="left" balign="left"> + getDbHost() : String </td></tr>
<tr><td align="left" balign="left"> + setDbHost(dbHost : String) </td></tr>
<tr><td align="left" balign="left"> + getDbPort() : String </td></tr>
<tr><td align="left" balign="left"> + setDbPort(dbPort : String) </td></tr>
<tr><td align="left" balign="left"> + getDbName() : String </td></tr>
<tr><td align="left" balign="left"> + setDbName(dbName : String) </td></tr>
<tr><td align="left" balign="left"> + getDbUsername() : String </td></tr>
<tr><td align="left" balign="left"> + setDbUsername(dbUsername : String) </td></tr>
<tr><td align="left" balign="left"> + getDbPassword() : String </td></tr>
<tr><td align="left" balign="left"> + setDbPassword(dbPassword : String) </td></tr>
<tr><td align="left" balign="left"> + isFastMode() : boolean </td></tr>
<tr><td align="left" balign="left"> + setFastMode(fastMode : boolean) </td></tr>
<tr><td align="left" balign="left"> + close() </td></tr>
<tr><td align="left" balign="left"> + openReader() : boolean </td></tr>
<tr><td align="left" balign="left"> + openWriter() </td></tr>
		</table></td></tr>
		</table>>, fontname="arial", fontcolor="black", fontsize=10.0];
	//tud.iir.persistence.DictionaryDBIndex extends tud.iir.persistence.DictionaryIndex
	c50917:p -> c50919:p [dir=back,arrowtail=empty];
}

