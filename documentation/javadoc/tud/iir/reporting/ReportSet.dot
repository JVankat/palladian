#!/usr/local/bin/dot
#
# Class diagram 
# Generated by UMLGraph version 5.2 (http://www.umlgraph.org/)
#

digraph G {
	edge [fontname="arial",fontsize=10,labelfontname="arial",labelfontsize=10];
	node [fontname="arial",fontsize=10,shape=plaintext];
	nodesep=0.25;
	ranksep=0.5;
	// tud.iir.reporting.ReportSet
	c51824 [label=<<table title="tud.iir.reporting.ReportSet" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" bgcolor="lemonChiffon" href="./ReportSet.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> ReportSet </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - serialVersionUID : long </td></tr>
<tr><td align="left" balign="left"> - runtime : int </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + getRuntime() : double </td></tr>
<tr><td align="left" balign="left"> + setRuntime(runtime : int) </td></tr>
<tr><td align="left" balign="left"> + getTotalEntities() : double </td></tr>
<tr><td align="left" balign="left"> + getTotalEntitiesForView() : String </td></tr>
<tr><td align="left" balign="left"> + getTotalCorrectEntities() : double </td></tr>
<tr><td align="left" balign="left"> + getTotalCorrectEntitiesForView() : String </td></tr>
<tr><td align="left" balign="left"> + getTotalFacts() : double </td></tr>
<tr><td align="left" balign="left"> + getTotalFactsForView() : String </td></tr>
<tr><td align="left" balign="left"> + getTotalCorrectFacts() : double </td></tr>
<tr><td align="left" balign="left"> + getTotalCorrectFactsForView() : String </td></tr>
<tr><td align="left" balign="left"> + getTotalEntityPrecision() : double </td></tr>
<tr><td align="left" balign="left"> + getTotalEntityPrecisionForView() : String </td></tr>
<tr><td align="left" balign="left"> + getTotalFactPrecision() : double </td></tr>
<tr><td align="left" balign="left"> + getTotalFactPrecisionForView() : String </td></tr>
<tr><td align="left" balign="left"> + getCorrectEntitiesPerMinute() : double </td></tr>
<tr><td align="left" balign="left"> + getCorrectEntitiesPerMinuteForView() : String </td></tr>
<tr><td align="left" balign="left"> + getCorrectFactsPerMinute() : double </td></tr>
<tr><td align="left" balign="left"> + getCorrectFactsPerMinuteForView() : String </td></tr>
<tr><td align="left" balign="left"> + getAvgFactsPerEntity() : double </td></tr>
<tr><td align="left" balign="left"> + getAvgFactsPerEntityForView() : String </td></tr>
<tr><td align="left" balign="left"> + getAvgCorrectFactsPerEntity() : double </td></tr>
<tr><td align="left" balign="left"> + getAvgCorrectFactsPerEntityForView() : String </td></tr>
<tr><td align="left" balign="left"> + getFactF1() : double </td></tr>
<tr><td align="left" balign="left"> + getFactF1ForView() : String </td></tr>
<tr><td align="left" balign="left"> + saveCompleteReportSet() </td></tr>
<tr><td align="left" balign="left"> + saveTotalOnly() </td></tr>
		</table></td></tr>
		</table>>, fontname="arial", fontcolor="black", fontsize=10.0];
	//tud.iir.reporting.ReportSet extends java.util.HashMap<tud.iir.knowledge.Concept, tud.iir.reporting.Report>
	c51855:p -> c51824:p [dir=back,arrowtail=empty];
	// java.util.HashMap<K, V>
	c51855 [label=<<table title="java.util.HashMap" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="http://java.sun.com/j2se/1.4.2/docs/api/java/util/HashMap.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> java.util.HashMap&lt;K, V&gt; </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> ~ DEFAULT_INITIAL_CAPACITY : int </td></tr>
<tr><td align="left" balign="left"> ~ MAXIMUM_CAPACITY : int </td></tr>
<tr><td align="left" balign="left"> ~ DEFAULT_LOAD_FACTOR : float </td></tr>
<tr><td align="left" balign="left"> ~ table : java.util.HashMap.Entry&lt;&gt;[] </td></tr>
<tr><td align="left" balign="left"> ~ size : int </td></tr>
<tr><td align="left" balign="left"> ~ threshold : int </td></tr>
<tr><td align="left" balign="left"> ~ loadFactor : float </td></tr>
<tr><td align="left" balign="left"> ~ modCount : int </td></tr>
<tr><td align="left" balign="left"> - entrySet : java.util.Set&lt;java.util.Map.Entry&lt;K, V&gt;&gt; </td></tr>
<tr><td align="left" balign="left"> - serialVersionUID : long </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> ~ init() </td></tr>
<tr><td align="left" balign="left"> ~ hash(arg0 : int) : int </td></tr>
<tr><td align="left" balign="left"> ~ indexFor(arg0 : int, arg1 : int) : int </td></tr>
<tr><td align="left" balign="left"> + size() : int </td></tr>
<tr><td align="left" balign="left"> + isEmpty() : boolean </td></tr>
<tr><td align="left" balign="left"> + get(arg0 : java.lang.Object) : V </td></tr>
<tr><td align="left" balign="left"> - getForNullKey() : V </td></tr>
<tr><td align="left" balign="left"> + containsKey(arg0 : java.lang.Object) : boolean </td></tr>
<tr><td align="left" balign="left"> ~ getEntry(arg0 : java.lang.Object) : java.util.HashMap.Entry&lt;K, V&gt; </td></tr>
<tr><td align="left" balign="left"> + put(arg0 : K, arg1 : V) : V </td></tr>
<tr><td align="left" balign="left"> - putForNullKey(arg0 : V) : V </td></tr>
<tr><td align="left" balign="left"> - putForCreate(arg0 : K, arg1 : V) </td></tr>
<tr><td align="left" balign="left"> - putAllForCreate(arg0 : java.util.Map&lt;?, ?&gt;) </td></tr>
<tr><td align="left" balign="left"> ~ resize(arg0 : int) </td></tr>
<tr><td align="left" balign="left"> ~ transfer(arg0 : java.util.HashMap.Entry&lt;&gt;[]) </td></tr>
<tr><td align="left" balign="left"> + putAll(arg0 : java.util.Map&lt;?, ?&gt;) </td></tr>
<tr><td align="left" balign="left"> + remove(arg0 : java.lang.Object) : V </td></tr>
<tr><td align="left" balign="left"> ~ removeEntryForKey(arg0 : java.lang.Object) : java.util.HashMap.Entry&lt;K, V&gt; </td></tr>
<tr><td align="left" balign="left"> ~ removeMapping(arg0 : java.lang.Object) : java.util.HashMap.Entry&lt;K, V&gt; </td></tr>
<tr><td align="left" balign="left"> + clear() </td></tr>
<tr><td align="left" balign="left"> + containsValue(arg0 : java.lang.Object) : boolean </td></tr>
<tr><td align="left" balign="left"> - containsNullValue() : boolean </td></tr>
<tr><td align="left" balign="left"> + clone() : java.lang.Object </td></tr>
<tr><td align="left" balign="left"> ~ addEntry(arg0 : int, arg1 : K, arg2 : V, arg3 : int) </td></tr>
<tr><td align="left" balign="left"> ~ createEntry(arg0 : int, arg1 : K, arg2 : V, arg3 : int) </td></tr>
<tr><td align="left" balign="left"> ~ newKeyIterator() : java.util.Iterator&lt;K&gt; </td></tr>
<tr><td align="left" balign="left"> ~ newValueIterator() : java.util.Iterator&lt;V&gt; </td></tr>
<tr><td align="left" balign="left"> ~ newEntryIterator() : java.util.Iterator&lt;java.util.Map.Entry&lt;K, V&gt;&gt; </td></tr>
<tr><td align="left" balign="left"> + keySet() : java.util.Set&lt;K&gt; </td></tr>
<tr><td align="left" balign="left"> + values() : java.util.Collection&lt;V&gt; </td></tr>
<tr><td align="left" balign="left"> + entrySet() : java.util.Set&lt;java.util.Map.Entry&lt;K, V&gt;&gt; </td></tr>
<tr><td align="left" balign="left"> - entrySet0() : java.util.Set&lt;java.util.Map.Entry&lt;K, V&gt;&gt; </td></tr>
<tr><td align="left" balign="left"> - writeObject(arg0 : java.io.ObjectOutputStream) </td></tr>
<tr><td align="left" balign="left"> - readObject(arg0 : java.io.ObjectInputStream) </td></tr>
<tr><td align="left" balign="left"> ~ capacity() : int </td></tr>
<tr><td align="left" balign="left"> ~ loadFactor() : float </td></tr>
		</table></td></tr>
		</table>>, fontname="arial", fontcolor="black", fontsize=10.0];
}

