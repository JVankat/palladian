#!/usr/local/bin/dot
#
# Class diagram 
# Generated by UMLGraph version 5.2 (http://www.umlgraph.org/)
#

digraph G {
	edge [fontname="arial",fontsize=10,labelfontname="arial",labelfontsize=10];
	node [fontname="arial",fontsize=10,shape=plaintext];
	nodesep=0.25;
	ranksep=0.5;
	// tud.iir.extraction.entity.XPathWrapperInductor
	c2312 [label=<<table title="tud.iir.extraction.entity.XPathWrapperInductor" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./XPathWrapperInductor.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> XPathWrapperInductor </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - entityXPath : String </td></tr>
<tr><td align="left" balign="left"> - currentExtractions : HashSet&lt;String&gt; </td></tr>
<tr><td align="left" balign="left"> - currentDomain : String </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + extractWithSeeds(url : String, eq : EntityQuery, currentConcept : Concept, seeds : String[]) </td></tr>
<tr><td align="left" balign="left"> + extract(url : String, eq : EntityQuery, currentConcept : Concept) </td></tr>
<tr><td align="left" balign="left"> + extract(document : Document, eq : EntityQuery, currentConcept : Concept) </td></tr>
<tr><td align="left" balign="left"> - extractEntities(document : Document, eq : EntityQuery, currentConcept : Concept, entityXPath : String) </td></tr>
<tr><td align="left" balign="left"> + hasExtractedFromCurrentURL() : boolean </td></tr>
<tr><td align="left" balign="left"> + getEntityXPath() : String </td></tr>
<tr><td align="left" balign="left"> + setEntityXPath(entityXPath : String) </td></tr>
<tr><td align="left" balign="left"> + main(args : String[]) </td></tr>
		</table></td></tr>
		</table>>, fontname="arial", fontcolor="black", fontsize=10.0];
	// tud.iir.extraction.entity.XPathAffixWrapper
	c2313 [label=<<table title="tud.iir.extraction.entity.XPathAffixWrapper" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./XPathAffixWrapper.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> XPathAffixWrapper </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - xPath : String </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + getXPath() : String </td></tr>
<tr><td align="left" balign="left"> + setXPath(path : String) </td></tr>
		</table></td></tr>
		</table>>, fontname="arial", fontcolor="black", fontsize=10.0];
	// tud.iir.extraction.entity.WrapperSet<W>
	c2314 [label=<<table title="tud.iir.extraction.entity.WrapperSet" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./WrapperSet.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> WrapperSet&lt;W&gt; </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - serialVersionUID : long </td></tr>
<tr><td align="left" balign="left"> - minWrapperSize : int </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + add(e : AffixWrapper) : boolean </td></tr>
<tr><td align="left" balign="left"> + contains(obj : Object) : boolean </td></tr>
<tr><td align="left" balign="left"> + removeShortWrappers() </td></tr>
<tr><td align="left" balign="left"> + removeShortWrappers(minWrapperSize : int) </td></tr>
<tr><td align="left" balign="left"> + removeSubWrappers() </td></tr>
<tr><td align="left" balign="left"> + getMinWrapperSize() : int </td></tr>
<tr><td align="left" balign="left"> + setMinWrapperSize(minWrapperSize : int) </td></tr>
		</table></td></tr>
		</table>>, fontname="arial", fontcolor="black", fontsize=10.0];
	// tud.iir.extraction.entity.WrapperInductorInterface
	c2315 [label=<<table title="tud.iir.extraction.entity.WrapperInductorInterface" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./WrapperInductorInterface.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> &#171;interface&#187; </td></tr>
<tr><td align="center" balign="center"> WrapperInductorInterface </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + extract(url : String, eq : EntityQuery, currentConcept : Concept) </td></tr>
		</table></td></tr>
		</table>>, fontname="arial", fontcolor="black", fontsize=10.0];
	// tud.iir.extraction.entity.WrapperInductor
	c2316 [label=<<table title="tud.iir.extraction.entity.WrapperInductor" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./WrapperInductor.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"><font face="ariali"> WrapperInductor </font></td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> # logger : Logger </td></tr>
<tr><td align="left" balign="left"> # ee : EntityExtractor </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + getExtractions() : ArrayList&lt;Entity&gt; </td></tr>
		</table></td></tr>
		</table>>, fontname="arial", fontcolor="black", fontsize=10.0];
	// tud.iir.extraction.entity.SeedExtractor
	c2317 [label=<<table title="tud.iir.extraction.entity.SeedExtractor" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./SeedExtractor.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> SeedExtractor </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - ee : EntityExtractor </td></tr>
<tr><td align="left" balign="left"> - xwi : XPathWrapperInductor </td></tr>
<tr><td align="left" balign="left"> - awi : AffixWrapperInductor </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + getPatterns() : Integer[] </td></tr>
<tr><td align="left" balign="left"> + getEntityQuery(concept : Concept, entityQueryType : int) : EntityQuery </td></tr>
<tr><td align="left" balign="left"> + extract(url : String, eq : EntityQuery, concept : Concept) </td></tr>
<tr><td align="left" balign="left"> + main(args : String[]) </td></tr>
		</table></td></tr>
		</table>>, fontname="arial", fontcolor="black", fontsize=10.0];
	// tud.iir.extraction.entity.PhraseWrapperInductor
	c2318 [label=<<table title="tud.iir.extraction.entity.PhraseWrapperInductor" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./PhraseWrapperInductor.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> PhraseWrapperInductor </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - ee : EntityExtractor </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + extract(url : String, eq : EntityQuery, currentConcept : Concept) </td></tr>
		</table></td></tr>
		</table>>, fontname="arial", fontcolor="black", fontsize=10.0];
	// tud.iir.extraction.entity.PhraseExtractor
	c2319 [label=<<table title="tud.iir.extraction.entity.PhraseExtractor" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./PhraseExtractor.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> PhraseExtractor </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> ~ pwi : PhraseWrapperInductor </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + getPatterns() : Integer[] </td></tr>
<tr><td align="left" balign="left"> + getEntityQuery(concept : Concept, entityQueryType : int) : EntityQuery </td></tr>
<tr><td align="left" balign="left"> + extract(url : String, eq : EntityQuery, concept : Concept) </td></tr>
		</table></td></tr>
		</table>>, fontname="arial", fontcolor="black", fontsize=10.0];
	// tud.iir.extraction.entity.Pattern
	c2320 [label=<<table title="tud.iir.extraction.entity.Pattern" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./Pattern.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> Pattern </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - xpath : String </td></tr>
<tr><td align="left" balign="left"> - indexes : ArrayList&lt;Integer&gt; </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + getXpath() : String </td></tr>
<tr><td align="left" balign="left"> + setXpath(xpath : String) </td></tr>
<tr><td align="left" balign="left"> + getIndexes() : ArrayList&lt;Integer&gt; </td></tr>
<tr><td align="left" balign="left"> + setIndexes(indexes : ArrayList&lt;Integer&gt;) </td></tr>
<tr><td align="left" balign="left"> + equals(obj : Object) : boolean </td></tr>
		</table></td></tr>
		</table>>, fontname="arial", fontcolor="black", fontsize=10.0];
	// tud.iir.extraction.entity.ListDiscoverer
	c2321 [label=<<table title="tud.iir.extraction.entity.ListDiscoverer" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./ListDiscoverer.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> ListDiscoverer </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - paginationURLs : HashSet&lt;String&gt; </td></tr>
<tr><td align="left" balign="left"> - paginationXPath : String </td></tr>
<tr><td align="left" balign="left"> - url : String </td></tr>
<tr><td align="left" balign="left"> - document : Document </td></tr>
<tr><td align="left" balign="left"> - crawler : Crawler </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + findPaginationURLs(document : Document) </td></tr>
<tr><td align="left" balign="left"> + findPaginationURLs(url : String) </td></tr>
<tr><td align="left" balign="left"> + findPaginationURLs() </td></tr>
<tr><td align="left" balign="left"> + getPaginationURLs() : HashSet&lt;String&gt; </td></tr>
<tr><td align="left" balign="left"> + getXPathSet(document : Document) : XPathSet </td></tr>
<tr><td align="left" balign="left"> + discoverEntityXPath(url : String) : String </td></tr>
<tr><td align="left" balign="left"> + discoverEntityXPath(document : Document) : String </td></tr>
<tr><td align="left" balign="left"> + removeSiblingPagePaths(xPathSet : XPathSet, url : String, document : Document) : XPathSet </td></tr>
<tr><td align="left" balign="left"> + findEntityColumn(document : Document, entityXPath : String) : int </td></tr>
<tr><td align="left" balign="left"> - setIndex(xPath : String, element : String, index : int) : String </td></tr>
<tr><td align="left" balign="left"> + entriesUniform(entries : ArrayList&lt;String&gt;, tableDuplicateCheck : boolean) : boolean </td></tr>
<tr><td align="left" balign="left"> + getPaginationXPath() : String </td></tr>
<tr><td align="left" balign="left"> + setPaginationXPath(paginationXPath : String) </td></tr>
<tr><td align="left" balign="left"> + main(args : String[]) </td></tr>
		</table></td></tr>
		</table>>, fontname="arial", fontcolor="black", fontsize=10.0];
	// tud.iir.extraction.entity.FocusedCrawlExtractor
	c2322 [label=<<table title="tud.iir.extraction.entity.FocusedCrawlExtractor" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./FocusedCrawlExtractor.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> FocusedCrawlExtractor </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - ee : EntityExtractor </td></tr>
<tr><td align="left" balign="left"> - xwi : XPathWrapperInductor </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + getPatterns() : Integer[] </td></tr>
<tr><td align="left" balign="left"> + getEntityQuery(concept : Concept, entityQueryType : int) : EntityQuery </td></tr>
<tr><td align="left" balign="left"> + extract(url : String, eq : EntityQuery, concept : Concept) </td></tr>
<tr><td align="left" balign="left"> + main(args : String[]) </td></tr>
		</table></td></tr>
		</table>>, fontname="arial", fontcolor="black", fontsize=10.0];
	// tud.iir.extraction.entity.EntityTrustComparator
	c2323 [label=<<table title="tud.iir.extraction.entity.EntityTrustComparator" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./EntityTrustComparator.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> EntityTrustComparator </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + compare(e1 : Entity, e2 : Entity) : int </td></tr>
		</table></td></tr>
		</table>>, fontname="arial", fontcolor="black", fontsize=10.0];
	// tud.iir.extraction.entity.EntityQueryFactory
	c2324 [label=<<table title="tud.iir.extraction.entity.EntityQueryFactory" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./EntityQueryFactory.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> EntityQueryFactory </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + RETRIEVAL_EXTRACTION_TYPE_PHRASE : int </td></tr>
<tr><td align="left" balign="left"> + RETRIEVAL_EXTRACTION_TYPE_FOCUSED_CRAWL : int </td></tr>
<tr><td align="left" balign="left"> + RETRIEVAL_EXTRACTION_TYPE_SEED : int </td></tr>
<tr><td align="left" balign="left"> + TYPE_XP_SUCH_AS : int </td></tr>
<tr><td align="left" balign="left"> + TYPE_XP_LIKE : int </td></tr>
<tr><td align="left" balign="left"> + TYPE_XP_INCLUDING : int </td></tr>
<tr><td align="left" balign="left"> + TYPE_XP_ESPECIALLY : int </td></tr>
<tr><td align="left" balign="left"> + TYPE_LIST_OF_XP : int </td></tr>
<tr><td align="left" balign="left"> + TYPE_XS_LIST : int </td></tr>
<tr><td align="left" balign="left"> + TYPE_BROWSE_XP : int </td></tr>
<tr><td align="left" balign="left"> + TYPE_INDEX_OF_XP : int </td></tr>
<tr><td align="left" balign="left"> + TYPE_XS_INDEX : int </td></tr>
<tr><td align="left" balign="left"> + TYPE_SEED_2 : int </td></tr>
<tr><td align="left" balign="left"> + TYPE_SEED_3 : int </td></tr>
<tr><td align="left" balign="left"> + TYPE_SEED_4 : int </td></tr>
<tr><td align="left" balign="left"> + TYPE_SEED_5 : int </td></tr>
<tr><td align="left" balign="left"> - instance : EntityQueryFactory </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + getInstance() : EntityQueryFactory </td></tr>
<tr><td align="left" balign="left"> + getExtractionTypes() : ArrayList&lt;Integer&gt; </td></tr>
<tr><td align="left" balign="left"> + createPhraseQuery(concept : Concept, type : int) : EntityQuery </td></tr>
<tr><td align="left" balign="left"> - createPhraseQueryXPSuchAs(concept : Concept) : EntityQuery </td></tr>
<tr><td align="left" balign="left"> - createPhraseQueryXPLike(concept : Concept) : EntityQuery </td></tr>
<tr><td align="left" balign="left"> - createPhraseQueryXPIncluding(concept : Concept) : EntityQuery </td></tr>
<tr><td align="left" balign="left"> - createPhraseQueryXPEspecially(concept : Concept) : EntityQuery </td></tr>
<tr><td align="left" balign="left"> + createFocusedCrawlQuery(concept : Concept, type : int) : EntityQuery </td></tr>
<tr><td align="left" balign="left"> - createFocusedCrawlQueryListOfXP(concept : Concept) : EntityQuery </td></tr>
<tr><td align="left" balign="left"> - createFocusedCrawlQueryXSList(concept : Concept) : EntityQuery </td></tr>
<tr><td align="left" balign="left"> - createFocusedCrawlQueryXSListing(concept : Concept) : EntityQuery </td></tr>
<tr><td align="left" balign="left"> - createFocusedCrawlQueryBrowseXP(concept : Concept) : EntityQuery </td></tr>
<tr><td align="left" balign="left"> - createFocusedCrawlQueryIndexOfXP(concept : Concept) : EntityQuery </td></tr>
<tr><td align="left" balign="left"> - createFocusedCrawlQueryXSIndex(concept : Concept) : EntityQuery </td></tr>
<tr><td align="left" balign="left"> + createSeedQuery(concept : Concept, type : int, numberOfCombinations : int) : EntityQuery </td></tr>
<tr><td align="left" balign="left"> - createSeedQuerySeedNumber(concept : Concept, numberOfSeeds : int, numberOfCombinations : int) : EntityQuery </td></tr>
		</table></td></tr>
		</table>>, fontname="arial", fontcolor="black", fontsize=10.0];
	// tud.iir.extraction.entity.EntityQuery
	c2325 [label=<<table title="tud.iir.extraction.entity.EntityQuery" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./EntityQuery.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> EntityQuery </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - regularExpression : String </td></tr>
<tr><td align="left" balign="left"> - seeds : String[] </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + getRegularExpression() : String </td></tr>
<tr><td align="left" balign="left"> + setRegularExpression(regularExpression : String) </td></tr>
<tr><td align="left" balign="left"> + getSeeds() : String[] </td></tr>
<tr><td align="left" balign="left"> + setSeeds(seeds : String[]) </td></tr>
<tr><td align="left" balign="left"> + getRetrievalExtractionType() : int </td></tr>
		</table></td></tr>
		</table>>, fontname="arial", fontcolor="black", fontsize=10.0];
	// tud.iir.extraction.entity.EntityExtractor
	c2326 [label=<<table title="tud.iir.extraction.entity.EntityExtractor" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./EntityExtractor.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> EntityExtractor </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - instance : EntityExtractor </td></tr>
<tr><td align="left" balign="left"> - logger : Logger </td></tr>
<tr><td align="left" balign="left"> - concepts : ArrayList&lt;Concept&gt; </td></tr>
<tr><td align="left" balign="left"> - extractionLimit : int </td></tr>
<tr><td align="left" balign="left"> ~ autoSave : boolean </td></tr>
<tr><td align="left" balign="left"> - patternCandidates : HashSet&lt;Pattern&gt; </td></tr>
<tr><td align="left" balign="left"> - currentNumberOfExtractions : int </td></tr>
<tr><td align="left" balign="left"> - extractionSaveNumber : int </td></tr>
<tr><td align="left" balign="left"> - currentExtractionStatus : EntityExtractionStatus </td></tr>
<tr><td align="left" balign="left"> - patterns : HashMap&lt;String, HashSet&lt;Integer&gt;&gt; </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + getInstance() : EntityExtractor </td></tr>
<tr><td align="left" balign="left"> + startExtraction(phrase : boolean, focusedCrawl : boolean, seeds : boolean) </td></tr>
<tr><td align="left" balign="left"> + startExtraction(phrase : boolean, focusedCrawl : boolean, seeds : boolean, continueFromLastExtraction : boolean) </td></tr>
<tr><td align="left" balign="left"> + extractionFromPhrase() </td></tr>
<tr><td align="left" balign="left"> + extractionFocusedCrawl() </td></tr>
<tr><td align="left" balign="left"> + extractionSeeds() </td></tr>
<tr><td align="left" balign="left"> + extract(entityExtractionTechnique : EntityExtractionTechnique) </td></tr>
<tr><td align="left" balign="left"> + getExtractions() : ArrayList&lt;Entity&gt; </td></tr>
<tr><td align="left" balign="left"> + printExtractions() </td></tr>
<tr><td align="left" balign="left"> # saveExtractions(saveResults : boolean) </td></tr>
<tr><td align="left" balign="left"> + createBenchmarkIndex() </td></tr>
<tr><td align="left" balign="left"> - saveExtractionStatus() </td></tr>
<tr><td align="left" balign="left"> + isAutoSave() : boolean </td></tr>
<tr><td align="left" balign="left"> + setAutoSave(autoSave : boolean) </td></tr>
<tr><td align="left" balign="left"> + getLogger() : Logger </td></tr>
<tr><td align="left" balign="left"> + getConcepts() : ArrayList&lt;Concept&gt; </td></tr>
<tr><td align="left" balign="left"> + setConcepts(concepts : ArrayList&lt;Concept&gt;) </td></tr>
<tr><td align="left" balign="left"> + normalizeAllEntities() </td></tr>
<tr><td align="left" balign="left"> + addExtraction(newEntity : Entity) </td></tr>
<tr><td align="left" balign="left"> + getExtractionLimit() : int </td></tr>
<tr><td align="left" balign="left"> + setExtractionLimit(extractionLimit : int) </td></tr>
<tr><td align="left" balign="left"> + main(a : String[]) </td></tr>
		</table></td></tr>
		</table>>, fontname="arial", fontcolor="black", fontsize=10.0];
	// tud.iir.extraction.entity.EntityExtractionThread
	c2327 [label=<<table title="tud.iir.extraction.entity.EntityExtractionThread" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./EntityExtractionThread.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> EntityExtractionThread </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - entityExtractionTechnique : EntityExtractionTechnique </td></tr>
<tr><td align="left" balign="left"> - entityQuery : EntityQuery </td></tr>
<tr><td align="left" balign="left"> - url : String </td></tr>
<tr><td align="left" balign="left"> - concept : Concept </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + run() </td></tr>
		</table></td></tr>
		</table>>, fontname="arial", fontcolor="black", fontsize=10.0];
	// tud.iir.extraction.entity.EntityExtractionTechnique
	c2328 [label=<<table title="tud.iir.extraction.entity.EntityExtractionTechnique" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./EntityExtractionTechnique.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"><font face="ariali"> EntityExtractionTechnique </font></td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> # urlProcessed : HashSet&lt;String&gt; </td></tr>
<tr><td align="left" balign="left"> + extractionTechnique : int </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"><font face="ariali" point-size="10.0"> + getPatterns() : Integer[] </font></td></tr>
<tr><td align="left" balign="left"><font face="ariali" point-size="10.0"> + getEntityQuery(concept : Concept, entityQueryType : int) : EntityQuery </font></td></tr>
<tr><td align="left" balign="left"><font face="ariali" point-size="10.0"> + extract(url : String, eq : EntityQuery, concept : Concept) </font></td></tr>
<tr><td align="left" balign="left"> + getExtractionTechnique() : int </td></tr>
<tr><td align="left" balign="left"> + setExtractionTechnique(extractionTechnique : int) </td></tr>
		</table></td></tr>
		</table>>, fontname="arial", fontcolor="black", fontsize=10.0];
	// tud.iir.extraction.entity.EntityExtractionStatus
	c2329 [label=<<table title="tud.iir.extraction.entity.EntityExtractionStatus" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./EntityExtractionStatus.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> EntityExtractionStatus </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - serialVersionUID : long </td></tr>
<tr><td align="left" balign="left"> - loaded : boolean </td></tr>
<tr><td align="left" balign="left"> - initialized : boolean </td></tr>
<tr><td align="left" balign="left"> - extractionType : int </td></tr>
<tr><td align="left" balign="left"> - patternNumber : int </td></tr>
<tr><td align="left" balign="left"> - currentConcept : String </td></tr>
<tr><td align="left" balign="left"> - urlStack : HashSet&lt;String&gt; </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + isLoaded() : boolean </td></tr>
<tr><td align="left" balign="left"> + setLoaded(loaded : boolean) </td></tr>
<tr><td align="left" balign="left"> + getExtractionType() : int </td></tr>
<tr><td align="left" balign="left"> + isInitialized() : boolean </td></tr>
<tr><td align="left" balign="left"> + setInitialized(initialized : boolean) </td></tr>
<tr><td align="left" balign="left"> + setExtractionType(extractionType : int) </td></tr>
<tr><td align="left" balign="left"> + nextExtractionType() </td></tr>
<tr><td align="left" balign="left"> + getCurrentConcept() : String </td></tr>
<tr><td align="left" balign="left"> + setCurrentConcept(currentConcept : String) </td></tr>
<tr><td align="left" balign="left"> + getUrlStack() : HashSet&lt;String&gt; </td></tr>
<tr><td align="left" balign="left"> + setUrlStack(urlStack : HashSet&lt;String&gt;) </td></tr>
<tr><td align="left" balign="left"> + setPatternNumber(patternNumber : int) </td></tr>
<tr><td align="left" balign="left"> + getPatternNumber() : int </td></tr>
<tr><td align="left" balign="left"> + toString() : String </td></tr>
		</table></td></tr>
		</table>>, fontname="arial", fontcolor="black", fontsize=10.0];
	// tud.iir.extraction.entity.EntityExtractionProcess
	c2330 [label=<<table title="tud.iir.extraction.entity.EntityExtractionProcess" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./EntityExtractionProcess.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> EntityExtractionProcess </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + run() </td></tr>
<tr><td align="left" balign="left"> + stopExtraction() : boolean </td></tr>
		</table></td></tr>
		</table>>, fontname="arial", fontcolor="black", fontsize=10.0];
	// tud.iir.extraction.entity.EntityExtraction
	c2331 [label=<<table title="tud.iir.extraction.entity.EntityExtraction" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./EntityExtraction.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> EntityExtraction </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - entity : Entity </td></tr>
<tr><td align="left" balign="left"> - retrievalExtractionAndQueryTypes : HashMap&lt;String, Integer&gt; </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + addExtraction(retrievalExtractionType : int, queryType : int) </td></tr>
<tr><td align="left" balign="left"> + getEntity() : Entity </td></tr>
<tr><td align="left" balign="left"> + setEntity(entity : Entity) </td></tr>
<tr><td align="left" balign="left"> + printRetrievalExtractionAndQueryTypes() : String </td></tr>
		</table></td></tr>
		</table>>, fontname="arial", fontcolor="black", fontsize=10.0];
	// tud.iir.extraction.entity.EntityDateComparator
	c2332 [label=<<table title="tud.iir.extraction.entity.EntityDateComparator" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./EntityDateComparator.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> EntityDateComparator </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + compare(e1 : Entity, e2 : Entity) : int </td></tr>
		</table></td></tr>
		</table>>, fontname="arial", fontcolor="black", fontsize=10.0];
	// tud.iir.extraction.entity.AffixWrapperInductor
	c2333 [label=<<table title="tud.iir.extraction.entity.AffixWrapperInductor" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./AffixWrapperInductor.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> AffixWrapperInductor </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - seedWrappers : HashMap&lt;String, ArrayList&lt;AffixWrapper&gt;&gt; </td></tr>
<tr><td align="left" balign="left"> - wrappers : WrapperSet&lt;AffixWrapper&gt; </td></tr>
<tr><td align="left" balign="left"> - maxWrapperLength : int </td></tr>
<tr><td align="left" balign="left"> - currentExtractions : HashSet&lt;String&gt; </td></tr>
<tr><td align="left" balign="left"> - currentDomain : String </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + contructWrappers(seeds : String[], page : String, isURL : boolean) </td></tr>
<tr><td align="left" balign="left"> + extract(url : String, eq : EntityQuery, currentConcept : Concept) </td></tr>
<tr><td align="left" balign="left"> + getSeedWrappers() : HashMap&lt;String, ArrayList&lt;AffixWrapper&gt;&gt; </td></tr>
<tr><td align="left" balign="left"> + setSeedWrappers(wrappers : HashMap&lt;String, ArrayList&lt;AffixWrapper&gt;&gt;) </td></tr>
<tr><td align="left" balign="left"> + getWrappers() : WrapperSet&lt;AffixWrapper&gt; </td></tr>
<tr><td align="left" balign="left"> + setWrappers(wrappers : WrapperSet&lt;AffixWrapper&gt;) </td></tr>
<tr><td align="left" balign="left"> + getMaxWrapperLength() : int </td></tr>
<tr><td align="left" balign="left"> + setMaxWrapperLength(maxWrapperLength : int) </td></tr>
<tr><td align="left" balign="left"> + main(args : String[]) </td></tr>
		</table></td></tr>
		</table>>, fontname="arial", fontcolor="black", fontsize=10.0];
	// tud.iir.extraction.entity.AffixWrapper
	c2334 [label=<<table title="tud.iir.extraction.entity.AffixWrapper" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./AffixWrapper.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> AffixWrapper </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> ~ prefix : String </td></tr>
<tr><td align="left" balign="left"> ~ suffix : String </td></tr>
<tr><td align="left" balign="left"> ~ prefixLength : int </td></tr>
<tr><td align="left" balign="left"> ~ suffixLength : int </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + getPrefix() : String </td></tr>
<tr><td align="left" balign="left"> + getPrefix(trimmedToLength : boolean) : String </td></tr>
<tr><td align="left" balign="left"> + setPrefix(prefix : String) </td></tr>
<tr><td align="left" balign="left"> + getSuffix() : String </td></tr>
<tr><td align="left" balign="left"> + getSuffix(trimmedToLength : boolean) : String </td></tr>
<tr><td align="left" balign="left"> + setSuffix(suffix : String) </td></tr>
<tr><td align="left" balign="left"> + getPrefixLength() : int </td></tr>
<tr><td align="left" balign="left"> + setPrefixLength(prefixLength : int) </td></tr>
<tr><td align="left" balign="left"> + getSuffixLength() : int </td></tr>
<tr><td align="left" balign="left"> + setSuffixLength(suffixLength : int) </td></tr>
<tr><td align="left" balign="left"> + isEmpty() : boolean </td></tr>
<tr><td align="left" balign="left"> + equals(obj : Object) : boolean </td></tr>
		</table></td></tr>
		</table>>, fontname="arial", fontcolor="black", fontsize=10.0];
	//tud.iir.extraction.entity.XPathWrapperInductor extends tud.iir.extraction.entity.WrapperInductor
	c2316:p -> c2312:p [dir=back,arrowtail=empty];
	//tud.iir.extraction.entity.XPathWrapperInductor implements tud.iir.extraction.entity.WrapperInductorInterface
	c2315:p -> c2312:p [dir=back,arrowtail=empty,style=dashed];
	//tud.iir.extraction.entity.XPathAffixWrapper extends tud.iir.extraction.entity.AffixWrapper
	c2334:p -> c2313:p [dir=back,arrowtail=empty];
	//tud.iir.extraction.entity.WrapperInductor implements tud.iir.extraction.entity.WrapperInductorInterface
	c2315:p -> c2316:p [dir=back,arrowtail=empty,style=dashed];
	//tud.iir.extraction.entity.SeedExtractor extends tud.iir.extraction.entity.EntityExtractionTechnique
	c2328:p -> c2317:p [dir=back,arrowtail=empty];
	//tud.iir.extraction.entity.PhraseWrapperInductor extends tud.iir.extraction.entity.WrapperInductor
	c2316:p -> c2318:p [dir=back,arrowtail=empty];
	//tud.iir.extraction.entity.PhraseWrapperInductor implements tud.iir.extraction.entity.WrapperInductorInterface
	c2315:p -> c2318:p [dir=back,arrowtail=empty,style=dashed];
	//tud.iir.extraction.entity.PhraseExtractor extends tud.iir.extraction.entity.EntityExtractionTechnique
	c2328:p -> c2319:p [dir=back,arrowtail=empty];
	//tud.iir.extraction.entity.FocusedCrawlExtractor extends tud.iir.extraction.entity.EntityExtractionTechnique
	c2328:p -> c2322:p [dir=back,arrowtail=empty];
	//tud.iir.extraction.entity.AffixWrapperInductor extends tud.iir.extraction.entity.WrapperInductor
	c2316:p -> c2333:p [dir=back,arrowtail=empty];
	//tud.iir.extraction.entity.AffixWrapperInductor implements tud.iir.extraction.entity.WrapperInductorInterface
	c2315:p -> c2333:p [dir=back,arrowtail=empty,style=dashed];
}

