#!/usr/local/bin/dot
#
# Class diagram 
# Generated by UMLGraph version 5.2 (http://www.umlgraph.org/)
#

digraph G {
	edge [fontname="arial",fontsize=10,labelfontname="arial",labelfontsize=10];
	node [fontname="arial",fontsize=10,shape=plaintext];
	nodesep=0.25;
	ranksep=0.5;
	// tud.iir.extraction.entity.WrapperSet<W>
	c22382 [label=<<table title="tud.iir.extraction.entity.WrapperSet" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" bgcolor="lemonChiffon" href="./WrapperSet.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> WrapperSet&lt;W&gt; </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - serialVersionUID : long </td></tr>
<tr><td align="left" balign="left"> - minWrapperSize : int </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + add(e : AffixWrapper) : boolean </td></tr>
<tr><td align="left" balign="left"> + contains(obj : Object) : boolean </td></tr>
<tr><td align="left" balign="left"> + removeShortWrappers() </td></tr>
<tr><td align="left" balign="left"> + removeShortWrappers(minWrapperSize : int) </td></tr>
<tr><td align="left" balign="left"> + removeSubWrappers() </td></tr>
<tr><td align="left" balign="left"> + getMinWrapperSize() : int </td></tr>
<tr><td align="left" balign="left"> + setMinWrapperSize(minWrapperSize : int) </td></tr>
		</table></td></tr>
		</table>>, fontname="arial", fontcolor="black", fontsize=10.0];
	//tud.iir.extraction.entity.WrapperSet<W> extends java.util.HashSet<tud.iir.extraction.entity.AffixWrapper>
	c22543:p -> c22382:p [dir=back,arrowtail=empty];
	// java.util.HashSet<E>
	c22543 [label=<<table title="java.util.HashSet" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="http://java.sun.com/j2se/1.4.2/docs/api/java/util/HashSet.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> java.util.HashSet&lt;E&gt; </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> ~ serialVersionUID : long </td></tr>
<tr><td align="left" balign="left"> - map : java.util.HashMap&lt;E, java.lang.Object&gt; </td></tr>
<tr><td align="left" balign="left"> - PRESENT : java.lang.Object </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + iterator() : java.util.Iterator&lt;E&gt; </td></tr>
<tr><td align="left" balign="left"> + size() : int </td></tr>
<tr><td align="left" balign="left"> + isEmpty() : boolean </td></tr>
<tr><td align="left" balign="left"> + contains(arg0 : java.lang.Object) : boolean </td></tr>
<tr><td align="left" balign="left"> + add(arg0 : E) : boolean </td></tr>
<tr><td align="left" balign="left"> + remove(arg0 : java.lang.Object) : boolean </td></tr>
<tr><td align="left" balign="left"> + clear() </td></tr>
<tr><td align="left" balign="left"> + clone() : java.lang.Object </td></tr>
<tr><td align="left" balign="left"> - writeObject(arg0 : java.io.ObjectOutputStream) </td></tr>
<tr><td align="left" balign="left"> - readObject(arg0 : java.io.ObjectInputStream) </td></tr>
		</table></td></tr>
		</table>>, fontname="arial", fontcolor="black", fontsize=10.0];
}

