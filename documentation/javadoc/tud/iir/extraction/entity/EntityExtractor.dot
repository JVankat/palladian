#!/usr/local/bin/dot
#
# Class diagram 
# Generated by UMLGraph version 5.2 (http://www.umlgraph.org/)
#

digraph G {
	edge [fontname="arial",fontsize=10,labelfontname="arial",labelfontsize=10];
	node [fontname="arial",fontsize=10,shape=plaintext];
	nodesep=0.25;
	ranksep=0.5;
	// tud.iir.extraction.Extractor
	c25078 [label=<<table title="tud.iir.extraction.Extractor" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="../Extractor.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"><font face="ariali"> tud.iir.extraction.Extractor </font></td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> # WAIT_FOR_ENTITIES_TIMEOUT : int </td></tr>
<tr><td align="left" balign="left"> # MAX_EXTRACTION_THREADS : int </td></tr>
<tr><td align="left" balign="left"> # WAIT_FOR_FREE_THREAD_SLOT : int </td></tr>
<tr><td align="left" balign="left"> # knowledgeManager : tud.iir.knowledge.KnowledgeManager </td></tr>
<tr><td align="left" balign="left"> - threadCount : int </td></tr>
<tr><td align="left" balign="left"> # extractionThreadGroup : java.lang.ThreadGroup </td></tr>
<tr><td align="left" balign="left"> - stopped : boolean </td></tr>
<tr><td align="left" balign="left"> - benchmark : boolean </td></tr>
<tr><td align="left" balign="left"> - URL_BLACKLIST : java.lang.String[] </td></tr>
<tr><td align="left" balign="left"> # logger : org.apache.log4j.Logger </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + getKnowledgeManager() : tud.iir.knowledge.KnowledgeManager </td></tr>
<tr><td align="left" balign="left"> + setKnowledgeManager(knowledgeManager : tud.iir.knowledge.KnowledgeManager) </td></tr>
<tr><td align="left" balign="left"> # resetThreadCount() </td></tr>
<tr><td align="left" balign="left"> + getThreadCount() : int </td></tr>
<tr><td align="left" balign="left"> + increaseThreadCount() </td></tr>
<tr><td align="left" balign="left"> + decreaseThreadCount() </td></tr>
<tr><td align="left" balign="left"> + isStopped() : boolean </td></tr>
<tr><td align="left" balign="left"> + setStopped(stopped : boolean) </td></tr>
<tr><td align="left" balign="left"> + isBenchmark() : boolean </td></tr>
<tr><td align="left" balign="left"> # isURLallowed(url : java.lang.String) : boolean </td></tr>
<tr><td align="left" balign="left"> + filterURLs(urls : java.util.ArrayList&lt;java.lang.String&gt;) : java.util.ArrayList&lt;java.lang.String&gt; </td></tr>
<tr><td align="left" balign="left"> + stopExtraction(saveResults : boolean) : boolean </td></tr>
<tr><td align="left" balign="left"><font face="ariali" point-size="10.0"> # saveExtractions(saveExtractions : boolean) </font></td></tr>
<tr><td align="left" balign="left"> + setBenchmark(benchmark : boolean) </td></tr>
<tr><td align="left" balign="left"> + getLogger() : org.apache.log4j.Logger </td></tr>
		</table></td></tr>
		</table>>, fontname="arial", fontcolor="black", fontsize=10.0];
	// tud.iir.extraction.entity.EntityExtractor
	c25096 [label=<<table title="tud.iir.extraction.entity.EntityExtractor" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" bgcolor="lemonChiffon" href="./EntityExtractor.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> EntityExtractor </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - instance : EntityExtractor </td></tr>
<tr><td align="left" balign="left"> - logger : Logger </td></tr>
<tr><td align="left" balign="left"> - concepts : ArrayList&lt;Concept&gt; </td></tr>
<tr><td align="left" balign="left"> - extractionLimit : int </td></tr>
<tr><td align="left" balign="left"> ~ autoSave : boolean </td></tr>
<tr><td align="left" balign="left"> - patternCandidates : HashSet&lt;Pattern&gt; </td></tr>
<tr><td align="left" balign="left"> - currentNumberOfExtractions : int </td></tr>
<tr><td align="left" balign="left"> - extractionSaveNumber : int </td></tr>
<tr><td align="left" balign="left"> - currentExtractionStatus : EntityExtractionStatus </td></tr>
<tr><td align="left" balign="left"> - patterns : HashMap&lt;String, HashSet&lt;Integer&gt;&gt; </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + getInstance() : EntityExtractor </td></tr>
<tr><td align="left" balign="left"> + startExtraction(phrase : boolean, focusedCrawl : boolean, seeds : boolean) </td></tr>
<tr><td align="left" balign="left"> + startExtraction(phrase : boolean, focusedCrawl : boolean, seeds : boolean, continueFromLastExtraction : boolean) </td></tr>
<tr><td align="left" balign="left"> + extractionFromPhrase() </td></tr>
<tr><td align="left" balign="left"> + extractionFocusedCrawl() </td></tr>
<tr><td align="left" balign="left"> + extractionSeeds() </td></tr>
<tr><td align="left" balign="left"> + extract(entityExtractionTechnique : EntityExtractionTechnique) </td></tr>
<tr><td align="left" balign="left"> + getExtractions() : ArrayList&lt;Entity&gt; </td></tr>
<tr><td align="left" balign="left"> + printExtractions() </td></tr>
<tr><td align="left" balign="left"> # saveExtractions(saveResults : boolean) </td></tr>
<tr><td align="left" balign="left"> + createBenchmarkIndex() </td></tr>
<tr><td align="left" balign="left"> - saveExtractionStatus() </td></tr>
<tr><td align="left" balign="left"> + isAutoSave() : boolean </td></tr>
<tr><td align="left" balign="left"> + setAutoSave(autoSave : boolean) </td></tr>
<tr><td align="left" balign="left"> + getLogger() : Logger </td></tr>
<tr><td align="left" balign="left"> + getConcepts() : ArrayList&lt;Concept&gt; </td></tr>
<tr><td align="left" balign="left"> + setConcepts(concepts : ArrayList&lt;Concept&gt;) </td></tr>
<tr><td align="left" balign="left"> + normalizeAllEntities() </td></tr>
<tr><td align="left" balign="left"> + addExtraction(newEntity : Entity) </td></tr>
<tr><td align="left" balign="left"> + getExtractionLimit() : int </td></tr>
<tr><td align="left" balign="left"> + setExtractionLimit(extractionLimit : int) </td></tr>
<tr><td align="left" balign="left"> + main(a : String[]) </td></tr>
		</table></td></tr>
		</table>>, fontname="arial", fontcolor="black", fontsize=10.0];
	//tud.iir.extraction.entity.EntityExtractor extends tud.iir.extraction.Extractor
	c25078:p -> c25096:p [dir=back,arrowtail=empty];
}

