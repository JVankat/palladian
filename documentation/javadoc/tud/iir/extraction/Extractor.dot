#!/usr/local/bin/dot
#
# Class diagram 
# Generated by UMLGraph version 5.2 (http://www.umlgraph.org/)
#

digraph G {
	edge [fontname="arial",fontsize=10,labelfontname="arial",labelfontsize=10];
	node [fontname="arial",fontsize=10,shape=plaintext];
	nodesep=0.25;
	ranksep=0.5;
	// tud.iir.extraction.Extractor
	c21025 [label=<<table title="tud.iir.extraction.Extractor" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" bgcolor="lemonChiffon" href="./Extractor.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"><font face="ariali"> Extractor </font></td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> # WAIT_FOR_ENTITIES_TIMEOUT : int </td></tr>
<tr><td align="left" balign="left"> # MAX_EXTRACTION_THREADS : int </td></tr>
<tr><td align="left" balign="left"> # WAIT_FOR_FREE_THREAD_SLOT : int </td></tr>
<tr><td align="left" balign="left"> # knowledgeManager : KnowledgeManager </td></tr>
<tr><td align="left" balign="left"> - threadCount : int </td></tr>
<tr><td align="left" balign="left"> # extractionThreadGroup : ThreadGroup </td></tr>
<tr><td align="left" balign="left"> - stopped : boolean </td></tr>
<tr><td align="left" balign="left"> - benchmark : boolean </td></tr>
<tr><td align="left" balign="left"> - URL_BLACKLIST : String[] </td></tr>
<tr><td align="left" balign="left"> # logger : Logger </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + getKnowledgeManager() : KnowledgeManager </td></tr>
<tr><td align="left" balign="left"> + setKnowledgeManager(knowledgeManager : KnowledgeManager) </td></tr>
<tr><td align="left" balign="left"> # resetThreadCount() </td></tr>
<tr><td align="left" balign="left"> + getThreadCount() : int </td></tr>
<tr><td align="left" balign="left"> + increaseThreadCount() </td></tr>
<tr><td align="left" balign="left"> + decreaseThreadCount() </td></tr>
<tr><td align="left" balign="left"> + isStopped() : boolean </td></tr>
<tr><td align="left" balign="left"> + setStopped(stopped : boolean) </td></tr>
<tr><td align="left" balign="left"> + isBenchmark() : boolean </td></tr>
<tr><td align="left" balign="left"> # isURLallowed(url : String) : boolean </td></tr>
<tr><td align="left" balign="left"> + filterURLs(urls : ArrayList&lt;String&gt;) : ArrayList&lt;String&gt; </td></tr>
<tr><td align="left" balign="left"> + stopExtraction(saveResults : boolean) : boolean </td></tr>
<tr><td align="left" balign="left"><font face="ariali" point-size="10.0"> # saveExtractions(saveExtractions : boolean) </font></td></tr>
<tr><td align="left" balign="left"> + setBenchmark(benchmark : boolean) </td></tr>
<tr><td align="left" balign="left"> + getLogger() : Logger </td></tr>
		</table></td></tr>
		</table>>, fontname="arial", fontcolor="black", fontsize=10.0];
	// tud.iir.extraction.entity.EntityExtractor
	c21043 [label=<<table title="tud.iir.extraction.entity.EntityExtractor" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./entity/EntityExtractor.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> tud.iir.extraction.entity.EntityExtractor </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - instance : tud.iir.extraction.entity.EntityExtractor </td></tr>
<tr><td align="left" balign="left"> - logger : org.apache.log4j.Logger </td></tr>
<tr><td align="left" balign="left"> - concepts : java.util.ArrayList&lt;tud.iir.knowledge.Concept&gt; </td></tr>
<tr><td align="left" balign="left"> - extractionLimit : int </td></tr>
<tr><td align="left" balign="left"> ~ autoSave : boolean </td></tr>
<tr><td align="left" balign="left"> - patternCandidates : java.util.HashSet&lt;tud.iir.extraction.entity.Pattern&gt; </td></tr>
<tr><td align="left" balign="left"> - currentNumberOfExtractions : int </td></tr>
<tr><td align="left" balign="left"> - extractionSaveNumber : int </td></tr>
<tr><td align="left" balign="left"> - currentExtractionStatus : tud.iir.extraction.entity.EntityExtractionStatus </td></tr>
<tr><td align="left" balign="left"> - patterns : java.util.HashMap&lt;java.lang.String, java.util.HashSet&lt;java.lang.Integer&gt;&gt; </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + getInstance() : tud.iir.extraction.entity.EntityExtractor </td></tr>
<tr><td align="left" balign="left"> + startExtraction(phrase : boolean, focusedCrawl : boolean, seeds : boolean) </td></tr>
<tr><td align="left" balign="left"> + startExtraction(phrase : boolean, focusedCrawl : boolean, seeds : boolean, continueFromLastExtraction : boolean) </td></tr>
<tr><td align="left" balign="left"> + extractionFromPhrase() </td></tr>
<tr><td align="left" balign="left"> + extractionFocusedCrawl() </td></tr>
<tr><td align="left" balign="left"> + extractionSeeds() </td></tr>
<tr><td align="left" balign="left"> + extract(entityExtractionTechnique : tud.iir.extraction.entity.EntityExtractionTechnique) </td></tr>
<tr><td align="left" balign="left"> + getExtractions() : java.util.ArrayList&lt;tud.iir.knowledge.Entity&gt; </td></tr>
<tr><td align="left" balign="left"> + printExtractions() </td></tr>
<tr><td align="left" balign="left"> # saveExtractions(saveResults : boolean) </td></tr>
<tr><td align="left" balign="left"> + createBenchmarkIndex() </td></tr>
<tr><td align="left" balign="left"> - saveExtractionStatus() </td></tr>
<tr><td align="left" balign="left"> + isAutoSave() : boolean </td></tr>
<tr><td align="left" balign="left"> + setAutoSave(autoSave : boolean) </td></tr>
<tr><td align="left" balign="left"> + getLogger() : org.apache.log4j.Logger </td></tr>
<tr><td align="left" balign="left"> + getConcepts() : java.util.ArrayList&lt;tud.iir.knowledge.Concept&gt; </td></tr>
<tr><td align="left" balign="left"> + setConcepts(concepts : java.util.ArrayList&lt;tud.iir.knowledge.Concept&gt;) </td></tr>
<tr><td align="left" balign="left"> + normalizeAllEntities() </td></tr>
<tr><td align="left" balign="left"> + addExtraction(newEntity : tud.iir.knowledge.Entity) </td></tr>
<tr><td align="left" balign="left"> + getExtractionLimit() : int </td></tr>
<tr><td align="left" balign="left"> + setExtractionLimit(extractionLimit : int) </td></tr>
<tr><td align="left" balign="left"> + main(a : java.lang.String[]) </td></tr>
		</table></td></tr>
		</table>>, fontname="arial", fontcolor="black", fontsize=10.0];
	// tud.iir.extraction.fact.FactExtractor
	c21058 [label=<<table title="tud.iir.extraction.fact.FactExtractor" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./fact/FactExtractor.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> tud.iir.extraction.fact.FactExtractor </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - instance : tud.iir.extraction.fact.FactExtractor </td></tr>
<tr><td align="left" balign="left"> - crawler : tud.iir.web.Crawler </td></tr>
<tr><td align="left" balign="left"> - logger : org.apache.log4j.Logger </td></tr>
<tr><td align="left" balign="left"> - domParser : org.cyberneko.html.parsers.DOMParser </td></tr>
<tr><td align="left" balign="left"> - urlsSeenForEntity : java.util.HashSet&lt;java.lang.String&gt; </td></tr>
<tr><td align="left" balign="left"> - counter : int </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + getInstance() : tud.iir.extraction.fact.FactExtractor </td></tr>
<tr><td align="left" balign="left"> + extractFactsForEntityName(entityName : java.lang.String) : java.util.ArrayList&lt;tud.iir.knowledge.Fact&gt; </td></tr>
<tr><td align="left" balign="left"> + startExtraction() </td></tr>
<tr><td align="left" balign="left"> + startExtraction(continueFromLastExtraction : boolean) </td></tr>
<tr><td align="left" balign="left"> # saveExtractions(saveResults : boolean) </td></tr>
<tr><td align="left" balign="left"> - removeCrossSources() </td></tr>
<tr><td align="left" balign="left"> + createFactLog() </td></tr>
<tr><td align="left" balign="left"> + createFactLog(headText : java.lang.String) </td></tr>
<tr><td align="left" balign="left"> - weightedOccurrences() </td></tr>
<tr><td align="left" balign="left"> + extractFacts(url : java.lang.String, attributes : java.util.HashSet&lt;tud.iir.knowledge.Attribute&gt;) : java.util.ArrayList&lt;tud.iir.knowledge.Fact&gt; </td></tr>
<tr><td align="left" balign="left"> + extractFacts(url : java.lang.String) : java.util.ArrayList&lt;tud.iir.knowledge.Fact&gt; </td></tr>
<tr><td align="left" balign="left"> + main(args : java.lang.String[]) </td></tr>
		</table></td></tr>
		</table>>, fontname="arial", fontcolor="black", fontsize=10.0];
	// tud.iir.extraction.qa.QAExtractor
	c21067 [label=<<table title="tud.iir.extraction.qa.QAExtractor" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./qa/QAExtractor.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> tud.iir.extraction.qa.QAExtractor </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - instance : tud.iir.extraction.qa.QAExtractor </td></tr>
<tr><td align="left" balign="left"> - logger : org.apache.log4j.Logger </td></tr>
<tr><td align="left" balign="left"> - flashOutputLogger : org.apache.log4j.Logger </td></tr>
<tr><td align="left" balign="left"> - benchmark : boolean </td></tr>
<tr><td align="left" balign="left"> - qas : java.util.ArrayList&lt;tud.iir.knowledge.QA&gt; </td></tr>
<tr><td align="left" balign="left"> - qaExtractionCount : int </td></tr>
<tr><td align="left" balign="left"> - answerClassifier : tud.iir.classification.qa.AnswerClassifier </td></tr>
<tr><td align="left" balign="left"> - qaSites : tud.iir.extraction.qa.QASites </td></tr>
<tr><td align="left" balign="left"> - faqSite : tud.iir.extraction.qa.QASite </td></tr>
<tr><td align="left" balign="left"> - pa : tud.iir.extraction.PageAnalyzer </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + getInstance() : tud.iir.extraction.qa.QAExtractor </td></tr>
<tr><td align="left" balign="left"> - initialize() </td></tr>
<tr><td align="left" balign="left"> + setAnswerClassifier(type : int) </td></tr>
<tr><td align="left" balign="left"> - loadSiteDescriptions() </td></tr>
<tr><td align="left" balign="left"> - logForFlash(message : java.lang.String) </td></tr>
<tr><td align="left" balign="left"> + startExtraction() </td></tr>
<tr><td align="left" balign="left"> + startExtraction(continueExtraction : boolean) </td></tr>
<tr><td align="left" balign="left"> # saveExtractions(saveExtractions : boolean) </td></tr>
<tr><td align="left" balign="left"> - saveExtractionStatus() </td></tr>
<tr><td align="left" balign="left"> + extractFAQ(url : java.lang.String) : java.util.ArrayList&lt;tud.iir.knowledge.QA&gt; </td></tr>
<tr><td align="left" balign="left"> - detectQuestions() : java.util.ArrayList&lt;java.lang.String&gt; </td></tr>
<tr><td align="left" balign="left"> + addQA(qa : tud.iir.knowledge.QA) </td></tr>
<tr><td align="left" balign="left"> - saveQAs() </td></tr>
<tr><td align="left" balign="left"> + detectAnswer(question : java.lang.String, questionXPaths : java.util.LinkedHashSet&lt;java.lang.String&gt;) : java.lang.String[] </td></tr>
<tr><td align="left" balign="left"> + filterAnswerCandidates(questionXPaths : java.util.LinkedHashSet&lt;java.lang.String&gt;, answerCandidates : java.util.LinkedHashSet&lt;java.lang.String&gt;) : java.util.LinkedHashSet&lt;java.lang.String&gt; </td></tr>
<tr><td align="left" balign="left"> + getAnswerFeatures(question : java.lang.String, htmlAnswer : java.lang.String) : tud.iir.classification.qa.AnswerFeatures </td></tr>
<tr><td align="left" balign="left"> - answerHintAvailable(answer : java.lang.String) : boolean </td></tr>
<tr><td align="left" balign="left"> - getTagAndWordDistances(question : java.lang.String, answer : java.lang.String) : java.lang.Integer[] </td></tr>
<tr><td align="left" balign="left"> + runQAFromOfflineTestset() </td></tr>
<tr><td align="left" balign="left"> + getPa() : tud.iir.extraction.PageAnalyzer </td></tr>
<tr><td align="left" balign="left"> + setPa(pa : tud.iir.extraction.PageAnalyzer) </td></tr>
<tr><td align="left" balign="left"> + main(arguments : java.lang.String[]) </td></tr>
		</table></td></tr>
		</table>>, fontname="arial", fontcolor="black", fontsize=10.0];
	// tud.iir.extraction.snippet.SnippetExtractor
	c21074 [label=<<table title="tud.iir.extraction.snippet.SnippetExtractor" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./snippet/SnippetExtractor.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> tud.iir.extraction.snippet.SnippetExtractor </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - logger : org.apache.log4j.Logger </td></tr>
<tr><td align="left" balign="left"> - instance : tud.iir.extraction.snippet.SnippetExtractor </td></tr>
<tr><td align="left" balign="left"> # MAX_EXTRACTION_THREADS : int </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + getInstance() : tud.iir.extraction.snippet.SnippetExtractor </td></tr>
<tr><td align="left" balign="left"> + startExtraction() </td></tr>
<tr><td align="left" balign="left"> + startExtraction(continueFromLastExtraction : boolean) </td></tr>
<tr><td align="left" balign="left"> # saveExtractions(saveResults : boolean) </td></tr>
<tr><td align="left" balign="left"> + main(abc : java.lang.String[]) </td></tr>
		</table></td></tr>
		</table>>, fontname="arial", fontcolor="black", fontsize=10.0];
	//tud.iir.extraction.entity.EntityExtractor extends tud.iir.extraction.Extractor
	c21025:p -> c21043:p [dir=back,arrowtail=empty];
	//tud.iir.extraction.fact.FactExtractor extends tud.iir.extraction.Extractor
	c21025:p -> c21058:p [dir=back,arrowtail=empty];
	//tud.iir.extraction.qa.QAExtractor extends tud.iir.extraction.Extractor
	c21025:p -> c21067:p [dir=back,arrowtail=empty];
	//tud.iir.extraction.snippet.SnippetExtractor extends tud.iir.extraction.Extractor
	c21025:p -> c21074:p [dir=back,arrowtail=empty];
}

