#!/usr/local/bin/dot
#
# Class diagram 
# Generated by UMLGraph version 5.2 (http://www.umlgraph.org/)
#

digraph G {
	edge [fontname="arial",fontsize=10,labelfontname="arial",labelfontsize=10];
	node [fontname="arial",fontsize=10,shape=plaintext];
	nodesep=0.25;
	ranksep=0.5;
	// tud.iir.extraction.Extractor
	c30490 [label=<<table title="tud.iir.extraction.Extractor" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="../Extractor.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"><font face="ariali"> tud.iir.extraction.Extractor </font></td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> # WAIT_FOR_ENTITIES_TIMEOUT : int </td></tr>
<tr><td align="left" balign="left"> # MAX_EXTRACTION_THREADS : int </td></tr>
<tr><td align="left" balign="left"> # WAIT_FOR_FREE_THREAD_SLOT : int </td></tr>
<tr><td align="left" balign="left"> # knowledgeManager : tud.iir.knowledge.KnowledgeManager </td></tr>
<tr><td align="left" balign="left"> - threadCount : int </td></tr>
<tr><td align="left" balign="left"> # extractionThreadGroup : java.lang.ThreadGroup </td></tr>
<tr><td align="left" balign="left"> - stopped : boolean </td></tr>
<tr><td align="left" balign="left"> - benchmark : boolean </td></tr>
<tr><td align="left" balign="left"> - URL_BLACKLIST : java.lang.String[] </td></tr>
<tr><td align="left" balign="left"> # logger : org.apache.log4j.Logger </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + getKnowledgeManager() : tud.iir.knowledge.KnowledgeManager </td></tr>
<tr><td align="left" balign="left"> + setKnowledgeManager(knowledgeManager : tud.iir.knowledge.KnowledgeManager) </td></tr>
<tr><td align="left" balign="left"> # resetThreadCount() </td></tr>
<tr><td align="left" balign="left"> + getThreadCount() : int </td></tr>
<tr><td align="left" balign="left"> + increaseThreadCount() </td></tr>
<tr><td align="left" balign="left"> + decreaseThreadCount() </td></tr>
<tr><td align="left" balign="left"> + isStopped() : boolean </td></tr>
<tr><td align="left" balign="left"> + setStopped(stopped : boolean) </td></tr>
<tr><td align="left" balign="left"> + isBenchmark() : boolean </td></tr>
<tr><td align="left" balign="left"> # isURLallowed(url : java.lang.String) : boolean </td></tr>
<tr><td align="left" balign="left"> + filterURLs(urls : java.util.ArrayList&lt;java.lang.String&gt;) : java.util.ArrayList&lt;java.lang.String&gt; </td></tr>
<tr><td align="left" balign="left"> + stopExtraction(saveResults : boolean) : boolean </td></tr>
<tr><td align="left" balign="left"><font face="ariali" point-size="10.0"> # saveExtractions(saveExtractions : boolean) </font></td></tr>
<tr><td align="left" balign="left"> + setBenchmark(benchmark : boolean) </td></tr>
<tr><td align="left" balign="left"> + getLogger() : org.apache.log4j.Logger </td></tr>
		</table></td></tr>
		</table>>, fontname="arial", fontcolor="black", fontsize=10.0];
	// tud.iir.extraction.qa.QAExtractor
	c30532 [label=<<table title="tud.iir.extraction.qa.QAExtractor" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" bgcolor="lemonChiffon" href="./QAExtractor.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> QAExtractor </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - instance : QAExtractor </td></tr>
<tr><td align="left" balign="left"> - logger : Logger </td></tr>
<tr><td align="left" balign="left"> - flashOutputLogger : Logger </td></tr>
<tr><td align="left" balign="left"> - benchmark : boolean </td></tr>
<tr><td align="left" balign="left"> - qas : ArrayList&lt;QA&gt; </td></tr>
<tr><td align="left" balign="left"> - qaExtractionCount : int </td></tr>
<tr><td align="left" balign="left"> - answerClassifier : AnswerClassifier </td></tr>
<tr><td align="left" balign="left"> - qaSites : QASites </td></tr>
<tr><td align="left" balign="left"> - faqSite : QASite </td></tr>
<tr><td align="left" balign="left"> - pa : PageAnalyzer </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + getInstance() : QAExtractor </td></tr>
<tr><td align="left" balign="left"> - initialize() </td></tr>
<tr><td align="left" balign="left"> + setAnswerClassifier(type : int) </td></tr>
<tr><td align="left" balign="left"> - loadSiteDescriptions() </td></tr>
<tr><td align="left" balign="left"> - logForFlash(message : String) </td></tr>
<tr><td align="left" balign="left"> + startExtraction() </td></tr>
<tr><td align="left" balign="left"> + startExtraction(continueExtraction : boolean) </td></tr>
<tr><td align="left" balign="left"> # saveExtractions(saveExtractions : boolean) </td></tr>
<tr><td align="left" balign="left"> - saveExtractionStatus() </td></tr>
<tr><td align="left" balign="left"> + extractFAQ(url : String) : ArrayList&lt;QA&gt; </td></tr>
<tr><td align="left" balign="left"> - detectQuestions() : ArrayList&lt;String&gt; </td></tr>
<tr><td align="left" balign="left"> + addQA(qa : QA) </td></tr>
<tr><td align="left" balign="left"> - saveQAs() </td></tr>
<tr><td align="left" balign="left"> + detectAnswer(question : String, questionXPaths : LinkedHashSet&lt;String&gt;) : String[] </td></tr>
<tr><td align="left" balign="left"> + filterAnswerCandidates(questionXPaths : LinkedHashSet&lt;String&gt;, answerCandidates : LinkedHashSet&lt;String&gt;) : LinkedHashSet&lt;String&gt; </td></tr>
<tr><td align="left" balign="left"> + getAnswerFeatures(question : String, htmlAnswer : String) : AnswerFeatures </td></tr>
<tr><td align="left" balign="left"> - answerHintAvailable(answer : String) : boolean </td></tr>
<tr><td align="left" balign="left"> - getTagAndWordDistances(question : String, answer : String) : Integer[] </td></tr>
<tr><td align="left" balign="left"> + runQAFromOfflineTestset() </td></tr>
<tr><td align="left" balign="left"> + getPa() : PageAnalyzer </td></tr>
<tr><td align="left" balign="left"> + setPa(pa : PageAnalyzer) </td></tr>
<tr><td align="left" balign="left"> + main(arguments : String[]) </td></tr>
		</table></td></tr>
		</table>>, fontname="arial", fontcolor="black", fontsize=10.0];
	//tud.iir.extraction.qa.QAExtractor extends tud.iir.extraction.Extractor
	c30490:p -> c30532:p [dir=back,arrowtail=empty];
}

